openapi: 3.0.1
info:
  title: TiDB Cloud API (3.1.0)
  description: |
    *TiDB Cloud API is in beta.*

    # Overview

    The TiDB Cloud API is a [REST interface](https://en.wikipedia.org/wiki/Representational_state_transfer) that provides you with programmatic access to manage administrative objects within TiDB Cloud. Through this API, you can manage resources automatically and efficiently:

    * Projects
    * Clusters
    * Backups
    * Restores

    The API has the following features:

    - **JSON entities.** All entities are expressed in JSON.
    - **HTTPS-only.** You can only access the API via HTTPS, ensuring all the data sent over the network is encrypted with TLS.
    - **Key-based access and digest authentication.** Before you access TiDB Cloud API, you must generate an API key. All requests are authenticated through [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication), ensuring the API key is never sent over the network.

    # Get Started

    This guide helps you make your first API call to TiDB Cloud API. You'll learn how to authenticate a request, build a request, and interpret the response. The [List all accessible projects](#tag/Project/operation/ListProjects) endpoint is used in this guide as an example.

    ## Prerequisites

    To complete this guide, you need to perform the following tasks:

    - Create a [TiDB Cloud account](https://tidbcloud.com/free-trial)
    - Install [curl](https://curl.se/)

    ## Step 1. Create an API key

    To create an API key, log in to your TiDB Cloud console. Navigate to the **Organization Settings** page, and create an API key.

    An API key contains a public key and a private key. Copy and save them in a secure location. You will need to use the API key later in this guide.

    For more details about creating API key, refer to [API Key Management](#section/Authentication/API-Key-Management).

    ## Step 2. Make your first API call

    ### Build an API call

    TiDB Cloud API call have the following components:

    - **A host.** The host for TiDB Cloud API is <https://api.tidbcloud.com>.
    - **An API Key**. The public key and the private key are required for authentication.
    - **A request.** When submitting data to a resource via `POST`, `PATCH`, or `PUT`, you must submit your payload in JSON.

    In this guide, you call the [List all accessible projects](#tag/Project/operation/ListProjects) endpoint. For the detailed description of the endpoint, see the [API reference](#tag/Project/operation/ListProjects).

    ### Call an API endpoint

    To get all projects in your organization, run the following command in your terminal. Remember to change `YOUR_PUBLIC_KEY` to your public key and `YOUR_PRIVATE_KEY` to your private key.

    ```shell
    curl --digest \
      --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
      --request GET \
      --url https://api.tidbcloud.com/api/v1beta/projects
    ```

    ## Step 3. Check the response

    After making the API call, if the status code in response is `200` and you see details about all the projects in your organization, your request is successful. Here is an example of a successful response.

    ```log
    {
      "items": [
        {
          "id": "{project_id}",
          "org_id": "{org_id}",
          "name": "MyProject",
          "cluster_count": 3,
          "user_count": 1,
          "create_timestamp": "1652407748"
        }
      ],
      "total": 1
    }
    ```

    If your API call is not successful, you will receive a status code other than `200` and the response looks similar to the following example. To troubleshoot the failed call, you can check the `message` in the response.

    ```log
    {
      "code": 49900001,
      "message": "public_key not found",
      "details": []
    }
    ```

    ## Code samples

    This section walks you through the quickest way to get started with TiDB Cloud API using programming languages. In these examples, you will learn how to use Python to create a cluster, backup and restore data, and scale out a cluster.

    You can view the [full code examples](https://github.com/tidbcloud/tidbcloud-api-samples) of Python and Golang on GitHub or clone the repository to your local machine.

    ```git
    git clone https://github.com/tidbcloud/tidbcloud-api-samples.git
    ```

    ### Create and connect to a TiDB cluster

    The following code examples show how to create a TiDB cluster and connect to the cluster. The whole process takes five steps:

    1. Get all projects.
    2. Get the cloud providers, regions and specifications.
    3. Create a cluster in your specified project.
    4. Get the new cluster information.
    5. Connect to the cluster using a MySQL client.

    #### Step 1: Get all projects

    Before you create a cluster, you need to get the ID of the project that you want to create a cluster in.

    To view the information of all available projects, you can use the [List all accessible projects](#tag/Project/operation/ListProjects) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_all_projects(public_key: str, private_key: str) -> dict:
        """
        Get all projects
        :param public_key: Your public key
        :param private_key: Your private key
        :return: Projects detail
        """
        url = f"{HOST}/api/v1beta/projects"
        resp = requests.get(url=url, auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY and YOUR_PRIVATE_KEY
        project = get_all_projects("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}")
        print(project)
    ```

    For more details about the request and response, see [List all accessible projects](#tag/Project/operation/ListProjects).

    #### Step 2: Get the cloud providers, regions and specifications

    Before you create a cluster, you need to get the list of available cloud providers, regions, and specifications.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_provider_regions_specifications(public_key: str, private_key: str) -> dict:
        """
        Get cloud providers, regions and available specifications.
        :param public_key: Your public key
        :param private_key: Your private key
        :return: List the cloud providers, regions and available specifications.
        """
        url = f"{HOST}/api/v1beta/clusters/provider/regions"
        resp = requests.get(url=url, auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY and YOUR_PRIVATE_KEY
        provider_regions_specifications = get_provider_regions_specifications("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}")
        print(provider_regions_specifications)
    ```

    For more details about the request and response, see [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

    #### Step 3: Create a cluster in your specified project and cloud provider

    The following example uses the [Create a cluster](#tag/Cluster/operation/CreateCluster) endpoint to create a Dedicated Tier cluster. A configuration example is provided in the code; you can replace the parameters using the information you get in the previous two steps.

    ```python
    import requests
    import time
    import json
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_dedicated_cluster(public_key: str, private_key: str, project_id: str) -> dict:
        """
        Create a dedicated cluster in your specified project.
        `data_config` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :return: Dedicated cluster id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters"
        ts = int(time.time())
        data_config = \
            {
                "name": f"tidbcloud-sample-{ts}",
                "cluster_type": "DEDICATED",
                "cloud_provider": "AWS",
                "region": "us-west-2",
                "config":
                    {
                        "root_password": "input_your_password",
                        "port": 4000,
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_size": "8C16G",
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {"node_size": "8C32G",
                                     "storage_size_gib": 500,
                                     "node_quantity": 3
                                     }
                            },
                        "ip_access_list":
                            [
                                {
                                    "cidr": "0.0.0.0/0",
                                    "description": "Allow Access from Anywhere."
                                }
                            ]

                    }
            }
        data_config_json = json.dumps(data_config)
        resp = requests.post(url=url,
                             auth=HTTPDigestAuth(public_key, private_key),
                             data=data_config_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY and YOUR_PROJECT_ID
        cluster = create_dedicated_cluster("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}")
        print(cluster)
    ```

    This request returns the ID of the cluster that you just created. For more details about the request and response, see [Create a cluster](#tag/Cluster/operation/CreateCluster).

    #### Step 4: Get the new cluster information

    After you successfully create a cluster, you can use the [Get cluster by ID](#tag/Cluster/operation/GetCluster) endpoint to get the information of the cluster.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    In the response, you can see the `connection_strings` field, which will be used later for connecting to the TiDB cluster. However, if your cluster status is `CREATING`, the `connection_strings` field might be empty. In such cases, you need to wait a while until the cluster status becomes `AVAILABLE` so that you can move on to the next step.

    For more details about the request and response, see [Get a cluster by ID](#tag/Cluster/operation/GetCluster).

    #### Step 5: Connect to the cluster using a MySQL client

    After the cluster becomes `AVAILABLE`, you can get the connection strings. With the connection strings, you can connect to the cluster using a MySQL client.

    The connection strings contain three fields:

    - `default_user`, the username you use to connect to TiDB.
    - `standard` connection string. In this guide, you'll use the `standard` connection.
    - `vpc_peering` connection string.

    The `standard` connection string contains a `host` and a `port`. In the following command, replace `${default_user}` and `${host}` with the actual values in the connection strings. Run the command to connect to the TiDB cluster.

    ```shell
    mysql --connect-timeout 15 -u ${default_user} -h ${host} -P 4000 -D test -p
    ```

    For more details on connection, see [Connect to TiDB Cluster](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster).

    ### Manage backups for your clusters

    The following example shows how to create a manual backup and restore the last backup data to a new cluster.

    #### Step 1: Create a manual backup

    To create a manual backup, you can use the [Create a backup for a cluster](#tag/Backup/operation/CreateBackup) endpoint.

    ```python
    import requests
    import json
    import datetime
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_manual_backup(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Create manual backup
        `data_for_backup` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The dedicated cluster id
        :return: The backup id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups"
        cur_date = datetime.datetime.now().strftime("%Y-%m-%d")
        data_for_backup = {"name": f"tidbcloud-backup-{cur_date}", "description": f"tidbcloud-backup-{cur_date}"}
        data_for_backup_json = json.dumps(data_for_backup)
        resp = requests.post(url=url,
                             data=data_for_backup_json,
                             auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        backup = create_manual_backup("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                      "{YOUR_CLUSTER_ID}")
        print(backup)
    ```

    #### Step 2: Restore the last backup data to a new cluster

    To restore the last backup data to a new cluster, you can use the [Create a restore task](#tag/Restore/operation/CreateRestoreTask) endpoint.

    ```python
    import requests
    import json
    import datetime
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def create_restore_task(public_key: str, private_key: str, project_id: str, back_up_id: str) -> dict:
        """
        Create restore task
        `data_for_restore` below is a demo. You should fill in the field according to
        your own situation
        :param private_key: Your public key
        :param public_key: Your private key
        :param project_id: The project id
        :param back_up_id: The backup id
        :return: The restore task id
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/restores"
        cur_date = datetime.datetime.now().strftime("%Y-%m-%d")
        data_for_restore = \
            {
                "backup_id": f"{back_up_id}",
                "name": f"tidbcloud-restore-{cur_date}",
                "config":
                    {
                        "root_password": "input_your_password",
                        "port": 4000,
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_size": "8C16G",
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {
                                        "node_size": "8C32G",
                                        "storage_size_gib": 500,
                                        "node_quantity": 3
                                    }
                            },
                        "ip_access_list":
                            [
                                {
                                    "cidr": "0.0.0.0/0",
                                    "description": "Allow Access from Anywhere."
                                }
                            ]

                    }
            }
        data_for_restore_json = json.dumps(data_for_restore)
        resp = requests.post(url=url,
                             auth=HTTPDigestAuth(public_key, private_key),
                             data=data_for_restore_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_BACKUP_ID
        restore = create_restore_task("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                      "{YOUR_BACKUP_ID}")
        print(restore)
    ```

    #### Step 3: Get the restored cluster information

    To get the information of the restored cluster, you can use the [Get a cluster by ID](#tag/Cluster/operation/GetCluster) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    ### Scale out one TiFlash node for an existing cluster

    The following example shows how to scale out one TiFlash node for an existing cluster.

    #### Step 1: Add one TiFlash node for the specified cluster

    To add a TiFlash node for the Dedicated Tier cluster, you can use the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.

    ```python
    import requests
    import json
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def modify_cluster(public_key: str, private_key: str, project_id: str, cluster_id: str, tiflash_num: int) -> dict:
        """
        Add one TiFlash node for specified cluster
        If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
        `data_add_tiflash` below is a demo. You should fill in the field according to
        your own situation
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :param tiflash_num: The tiflash num
        :return: If success, return None. Else, return message
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        data_add_tiflash = \
            {
                "config":
                    {
                        "components":
                            {
                                "tidb":
                                    {
                                        "node_quantity": 1
                                    },
                                "tikv":
                                    {
                                        "node_quantity": 3
                                    },
                                "tiflash":
                                    {
                                        "node_quantity": f"{tiflash_num}",
                                        "node_size": "8C64G",
                                        "storage_size_gib": 500
                                    }
                            }
                    }
            }
        data_add_tiflash_json = json.dumps(data_add_tiflash)
        resp = requests.patch(url=url,
                              auth=HTTPDigestAuth(public_key, private_key),
                              data=data_add_tiflash_json)
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID, YOUR_CLUSTER_ID and MODIFY_TIFLASH_NUM
        modify_cluster("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                       "{YOUR_CLUSTER_ID}", "{MODIFY_TIFLASH_NUM}")
    ```

    #### Step 2: View the scale-out progress

    To view the scale-out progress, you can use the [Get a cluster by ID](#tag/Cluster/operation/GetCluster) endpoint.

    ```python
    import requests
    from requests.auth import HTTPDigestAuth

    HOST = "https://api.tidbcloud.com"


    def get_cluster_by_id(public_key: str, private_key: str, project_id: str, cluster_id: str) -> dict:
        """
        Get the cluster detail.
        You will get `connection_strings` from the response after the cluster's status is`AVAILABLE`.
        Then, you can connect to TiDB using the default user, host, and port in `connection_strings`
        :param public_key: Your public key
        :param private_key: Your private key
        :param project_id: The project id
        :param cluster_id: The cluster id
        :return: The cluster detail
        """
        url = f"{HOST}/api/v1beta/projects/{project_id}/clusters/{cluster_id}"
        resp = requests.get(url=url,
                            auth=HTTPDigestAuth(public_key, private_key))
        if resp.status_code != 200:
            print(f"request invalid, code : {resp.status_code}, message : {resp.text}")
            raise Exception(f"request invalid, code : {resp.status_code}, message : {resp.text}")
        return resp.json()


    if __name__ == "__main__":
        # Replace YOUR_PUBLIC_KEY, YOUR_PRIVATE_KEY, YOUR_PROJECT_ID and YOUR_CLUSTER_ID
        cluster = get_cluster_by_id("{YOUR_PUBLIC_KEY}", "{YOUR_PRIVATE_KEY}", "{YOUR_PROJECT_ID}",
                                           "{YOUR_CLUSTER_ID}")
        print(cluster)
    ```

    # Authentication

    The TiDB Cloud API uses [HTTP Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication). It protects your private key from being sent over the network. For more details about HTTP Digest Authentication, refer to the [IETF RFC](https://datatracker.ietf.org/doc/html/rfc7616).

    ## API Key Overview

    - The API key contains a public key and a private key, which act as the username and password required in the HTTP Digest Authentication. The private key only displays upon the key creation.
    - The API key belongs to your organization and acts as the `Owner` role. You can check [permissions of owner](https://docs.pingcap.com/tidbcloud/manage-user-access#configure-member-roles).
    - You must provide the correct API key in every request. Otherwise, the TiDB Cloud responds with a `401` error.

    ## API Key Management

    ### Create an API Key

    Only the **owner** of an organization can create an API key.

    To create an API key in an organization, perform the following steps:

    1. Click the account name in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab and then click **Create API Key**.
    4. Enter a description for your API key. The role of the API key is always `Owner` currently.
    5. Click **Next**. Copy and save the public key and the private key.
    6. Make sure that you have copied and saved the private key in a secure location. The private key only displays upon the creation. After leaving this page, you will not be able to get the full private key again.
    7. Click **Done**.

    ### View Details of an API Key

    To view details of an API key, perform the following steps:

    1. Click the account name in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. You can view the details of the API keys in the menu.

    ### Edit an API Key

    Only the **owner** of an organization can modify an API key.

    To edit an API key in an organization, perform the following steps:

    1. Click the account name in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. Click **Edit** in the API key row that you want to change.
    4. You can update the API key description.
    5. Click **Done**.

    ### Delete an API key

    Only the **owner** of an organization can delete an API key.

    To delete an API key in an organization, perform the following steps:

    1. Click the account name in the upper-right corner of the TiDB Cloud console.
    2. Click **Organization Settings**. The organization settings page is displayed.
    3. Click the **API Keys** tab.
    4. Click **Delete** in the API key row that you want to delete.
    5. Click **I understand the consequences, delete this API Key.**

    # Rate Limiting


    The TiDB Cloud API allows up to 100 requests per minute per API key. If you exceed the rate limit, the API returns a `429` error.

    Each API request returns the following headers about the limit.

    - `X-Ratelimit-Limit-Minute`: The number of requests allowed per minute. It is 100 currently.
    - `X-Ratelimit-Remaining-Minute`: The number of remaining requests in the current minute. When it reaches `0`, the API returns a `429` error and indicates that you exceed the rate limit.
    - `X-Ratelimit-Reset`: The time in seconds at which the current rate limit resets.

    If you exceed the rate limit, an error response returns like this.

    ```
    > HTTP/2 429
    > date: Fri, 22 Jul 2022 05:28:37 GMT
    > content-type: application/json
    > content-length: 66
    > x-ratelimit-reset: 23
    > x-ratelimit-remaining-minute: 0
    > x-ratelimit-limit-minute: 100
    > x-kong-response-latency: 2
    > server: kong/2.8.1

    > {"details":[],"code":49900007,"message":"API rate limit exceeded"}
    ```

    # API Changelog

    This changelog lists all changes to the TiDB Cloud API.

    <!-- In reverse chronological order -->

    ## 20220920

    - The API is now in public beta and available to all users.

    ## 20220906

    - Add a `config.components.tikv.storage_size_gib` field to the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Modify the `config.components.tikv.node_quantity` and `config.components.tiflash.node_quantity` fields from `required` to `optional` for the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Remove the "Can not modify `storage_size_gib` of an existing cluster" limitation of the `config.components.tiflash.storage_size_gib` field for the [Create a cluster](#tag/Cluster/operation/CreateCluster) and [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoints.

    ## 20220823

    - Add a `config.paused` field to the [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster) endpoint.
    - Add two cluster statuses: `"IMPORTING"` and `"UNAVAILABLE"`.

    ## 20220809

    - Initial release of the TiDB Cloud API (v1beta) in private beta, including the following resources and endpoints:

        - Project:

            - [List all accessible projects](#tag/Project/operation/ListProjects)

        - Cluster:
            - [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions)
            - [List all clusters in a project](/#tag/Cluster/operation/ListClustersOfProject)
            - [Create a cluster](#tag/Cluster/operation/CreateCluster)
            - [Get a cluster by ID](#tag/Cluster/operation/GetCluster)
            - [Delete a cluster](#tag/Cluster/operation/DeleteCluster)
            - [Modify a Dedicated Tier cluster](#tag/Cluster/operation/UpdateCluster)
        - Backup:
            - [List all backups for a cluster](#tag/Backup/operation/ListBackUpOfCluster)
            - [Create a backup for a cluster](#tag/Backup/operation/CreateBackup)
            - [Get a backup for a cluster](#tag/Backup/operation/GetBackupOfCluster)
            - [Delete a backup for a cluster](#tag/Backup/operation/DeleteBackup)
        - Restore:
            - [List the restore tasks in a project](#tag/Restore/operation/ListRestoreTasks)
            - [Create a restore task](#tag/Restore/operation/CreateRestoreTask)
            - [Get a restore task](#tag/Restore/operation/GetRestoreTask)
  version: v1-beta
  x-logo:
    url: https://download.pingcap.org/tidbcloud-logo-for-api-docs.png
    altText: TiDB Cloud Logo
    href: https://docs.pingcap.com/tidbcloud/
servers:
- url: https://api.tidbcloud.com/
tags:
- name: Project
  description: List projects.
- name: Cluster
  description: Create, get, modify, and delete TiDB clusters.
- name: Backup
  description: |-
    Create, get, modify, and delete backups for TiDB clusters.

    For Developer Tier clusters, you cannot create or manage backups via API. You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview) to export your data as backups.
- name: Restore
  description: |-
    Get and create restore tasks for TiDB clusters. You can only restore data to a new cluster.

    For more information on restoration on TiDB Cloud, refer to [Restore](https://docs.pingcap.com/tidbcloud/backup-and-restore#restore).

    For Developer Tier clusters, you cannot manage restore tasks via API.
paths:
  /api/v1beta/clusters/provider/regions:
    get:
      tags:
      - Cluster
      summary: List the cloud providers, regions and available specifications.
      operationId: ListProviderRegions
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetProviderRegionsResp
                type: object
                properties:
                  items:
                    type: array
                    description: Items of provider regions.
                    example:
                    - cluster_type: DEDICATED
                      cloud_provider: AWS
                      region: us-west-2
                      tidb:
                      - node_size: 8C16G
                        node_quantity_range:
                          min: 1
                          step: 1
                      tikv:
                      - node_size: 8C64G
                        node_quantity_range:
                          min: 3
                          step: 3
                        storage_size_gib_range:
                          min: 500
                          max: 4096
                      tiflash:
                      - node_size: 8C64G
                        node_quantity_range:
                          min: 0
                          step: 1
                        storage_size_gib_range:
                          min: 500
                          max: 2048
                    - cluster_type: DEVELOPER
                      cloud_provider: AWS
                      region: us-west-2
                      tidb:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                      tikv:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                        storage_size_gib_range:
                          min: 1
                          max: 1
                      tiflash:
                      - node_size: Shared0
                        node_quantity_range:
                          min: 1
                          step: 1
                        storage_size_gib_range:
                          min: 1
                          max: 1
                    items:
                      title: ListProviderRegionsItem
                      type: object
                      properties:
                        cluster_type:
                          type: string
                          description: |-
                            The cluster type.
                            - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                            - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster
                          format: enum
                          example: DEDICATED
                          enum:
                          - DEDICATED
                          - DEVELOPER
                        cloud_provider:
                          type: string
                          description: |-
                            The cloud provider on which your TiDB cluster is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud Platform cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        region:
                          type: string
                          description: |-
                            The region in which your TiDB cluster is hosted.

                            For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                            For example, `"us-west-2"` refers to Oregon for AWS.
                          example: us-west-2
                        tidb:
                          type: array
                          description: The list of TiDB specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiDB component in the
                                  cluster.
                                example: 8C16G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiDB component in the cluster.
                        tikv:
                          type: array
                          description: The list of TiKV specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiKV component in the
                                  cluster.
                                example: 8C64G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiKV component in the cluster.
                              storage_size_gib_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                  max:
                                    type: integer
                                    description: The maximum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                description: The storage size range for each node
                                  of the TiKV component in the cluster.
                        tiflash:
                          type: array
                          description: The list of TiFlash specifications in the region.
                          items:
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: The size of the TiFlash component in
                                  the cluster.
                                example: 8C64G
                              node_quantity_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum node quantity of the
                                      component in the cluster.
                                    format: int32
                                  step:
                                    type: integer
                                    description: The step of node quantity of the
                                      component in the cluster.
                                    format: int32
                                description: The range and step of node quantity of
                                  the TiFlash component in the cluster.
                              storage_size_gib_range:
                                type: object
                                properties:
                                  min:
                                    type: integer
                                    description: The minimum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                  max:
                                    type: integer
                                    description: The maximum storage size for each
                                      node of the component in the cluster.
                                    format: int32
                                description: The storage size range for each node
                                  of the TiFlash component in the cluster.
                      description: ListProviderRegionsItem is the item of provider
                        regions.
                description: GetProviderRegionsResp is the response for getting provider
                  regions.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/clusters/provider/regions
  /api/v1beta/projects:
    get:
      tags:
      - Project
      summary: List all accessible projects.
      operationId: ListProjects
      parameters:
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetProjectsResp
                required:
                - items
                - total
                type: object
                properties:
                  items:
                    type: array
                    description: The items of accessible projects.
                    items:
                      title: ListProjectItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the project.
                          format: uint64
                          example: "1"
                        org_id:
                          type: string
                          description: The ID of the TiDB Cloud organization to which
                            the project belongs.
                          format: uint64
                          example: "1"
                        name:
                          type: string
                          description: The name of the project.
                          example: default_project
                        cluster_count:
                          type: integer
                          description: The number of TiDB Cloud clusters deployed
                            in the project.
                          format: int64
                          example: 4
                        user_count:
                          type: integer
                          description: The number of users in the project.
                          format: int64
                          example: 10
                        create_timestamp:
                          type: string
                          description: The creation time of the cluster in Unix timestamp
                            seconds (epoch time).
                          format: timestamp
                          example: "1656991448"
                      description: ListProjectItem is the item of projects.
                  total:
                    type: integer
                    description: The total number of accessible projects.
                    format: int64
                    example: 1
                description: GetProjectsResp is the response for getting accessible
                  projects.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects?page=1&page_size=10'
  /api/v1beta/projects/{project_id}/clusters:
    get:
      tags:
      - Cluster
      summary: List all clusters in a project.
      operationId: ListClustersOfProject
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int64
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int64
          default: 10
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetClustersOfProjectResp
                required:
                - items
                - total
                type: object
                properties:
                  items:
                    type: array
                    description: The items of clusters in the project.
                    items:
                      title: ClusterItem
                      required:
                      - id
                      - project_id
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the cluster.
                          format: uint64
                          example: "1"
                        project_id:
                          type: string
                          description: The ID of the project.
                          format: uint64
                          example: "1"
                        name:
                          pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
                          type: string
                          description: The name of the cluster.
                          example: Cluster0
                        cluster_type:
                          type: string
                          description: |-
                            The cluster type:
                            - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                            - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster.
                          format: enum
                          example: DEDICATED
                          enum:
                          - DEDICATED
                          - DEVELOPER
                        cloud_provider:
                          type: string
                          description: |-
                            The cloud provider on which your TiDB cluster is hosted.
                            - `"AWS"`: the Amazon Web Services cloud provider
                            - `"GCP"`: the Google Cloud Platform cloud provider
                          format: string
                          example: AWS
                          enum:
                          - AWS
                          - GCP
                        region:
                          type: string
                          description: Region of the cluster.
                          example: us-west-2
                        create_timestamp:
                          type: string
                          description: The creation time of the cluster in Unix timestamp
                            seconds (epoch time).
                          format: timestamp
                          example: "1656991448"
                        config:
                          type: object
                          properties:
                            port:
                              maximum: 65535
                              minimum: 1024
                              type: integer
                              description: The TiDB port for connection. The port
                                must be in the range of 1024-65535 except 10080.
                              format: int32
                              example: 4000
                              default: 4000
                            components:
                              required:
                              - tidb
                              - tikv
                              type: object
                              properties:
                                tidb:
                                  required:
                                  - node_quantity
                                  - node_size
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                        **Limitations**:
                                        - You cannot modify `node_size` for TiDB of an existing cluster.
                                      example: 8C16G
                                    node_quantity:
                                      type: integer
                                      description: |
                                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                      format: int32
                                      example: 2
                                  description: The TiDB component of the cluster.
                                tikv:
                                  required:
                                  - node_quantity
                                  - node_size
                                  - storage_size_gib
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                        **Limitations**:
                                        - You cannot modify `node_size` for TiKV of an existing cluster.
                                      example: 8C64G
                                    storage_size_gib:
                                      type: integer
                                      description: The storage size of a node in the
                                        cluster. You can get the minimum and maximum
                                        of storage size from the response of [List
                                        the cloud providers, regions and available
                                        specifications](#tag/Cluster/operation/ListProviderRegions).
                                      format: int32
                                      example: 1024
                                    node_quantity:
                                      type: integer
                                      description: |-
                                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Limitations**:
                                        - You cannot decrease node quantity for TiKV.
                                        - The `node_quantity` of TiKV must be a multiple of 3.
                                      format: int32
                                      example: 3
                                  description: The TiKV component of the cluster.
                                tiflash:
                                  required:
                                  - node_quantity
                                  - node_size
                                  - storage_size_gib
                                  type: object
                                  properties:
                                    node_size:
                                      type: string
                                      description: |-
                                        The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Additional combination rules**:
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                        **Limitations**:
                                        - You cannot modify `node_size` for TiFlash of an existing cluster.
                                      example: 8C64G
                                    storage_size_gib:
                                      type: integer
                                      description: |
                                        The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                      format: int32
                                      example: 1024
                                    node_quantity:
                                      type: integer
                                      description: |
                                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                        **Limitations**:
                                        - You cannot decrease node quantity for TiFlash.
                                      format: int32
                                      example: 1
                                  description: The TiFlash component of the cluster.
                              description: The components of the cluster.
                              example:
                                tidb:
                                  node_size: 8C16G
                                  node_quantity: 2
                                tikv:
                                  node_size: 8C64G
                                  storage_size_gib: 1024
                                  node_quantity: 3
                          description: The configuration of the cluster.
                          example:
                            port: 4000
                            components:
                              tidb:
                                node_size: 8C16G
                                node_quantity: 2
                              tikv:
                                node_size: 8C64G
                                storage_size_gib: 1024
                                node_quantity: 3
                        status:
                          title: ClusterItemStatus
                          type: object
                          properties:
                            tidb_version:
                              type: string
                              description: TiDB version.
                              example: v6.1.0
                            cluster_status:
                              type: string
                              description: Status of the cluster.
                              format: enum
                              example: AVAILABLE
                              enum:
                              - AVAILABLE
                              - CREATING
                              - MODIFYING
                              - PAUSED
                              - RESUMING
                              - UNAVAILABLE
                              - IMPORTING
                            node_map:
                              required:
                              - tidb
                              - tikv
                              type: object
                              properties:
                                tidb:
                                  type: array
                                  description: TiDB node map.
                                  example:
                                  - node_name: tidb-0
                                    availability_zone: us-west-2a
                                    node_size: 8C16G
                                    vcpu_num: 8
                                    ram_bytes: "17179869184"
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tidb-1
                                    availability_zone: us-west-2b
                                    node_size: 8C16G
                                    vcpu_num: 8
                                    ram_bytes: "17179869184"
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tidb-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiDB component
                                          in the cluster.
                                        example: 8C16G
                                      vcpu_num:
                                        type: integer
                                        description: The total vCPUs of a node in
                                          the cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `vcpu_num` is always 0.
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: The RAM size of a node in the
                                          cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `ram_bytes` is always 0.
                                        format: int64
                                        example: "17179869184"
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                                tikv:
                                  type: array
                                  description: TiKV node map.
                                  example:
                                  - node_name: tikv-0
                                    availability_zone: us-west-2a
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tikv-1
                                    availability_zone: us-west-2b
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tikv-2
                                    availability_zone: us-west-2c
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tikv-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiKV component
                                          in the cluster.
                                        example: 8C64G
                                      vcpu_num:
                                        type: integer
                                        description: The total vCPUs of a node in
                                          the cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `vcpu_num` is always 0.
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: The RAM size of a node in the
                                          cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `ram_bytes` is always 0.
                                        format: int64
                                        example: "68719476736"
                                      storage_size_gib:
                                        type: integer
                                        description: The storage size of a node in
                                          the cluster.
                                        format: int32
                                        example: 1024
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                                tiflash:
                                  type: array
                                  description: TiFlash node map.
                                  example:
                                  - node_name: tiflash-0
                                    availability_zone: us-west-2a
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  - node_name: tiflash-1
                                    availability_zone: us-west-2b
                                    node_size: 8C64G
                                    vcpu_num: 8
                                    ram_bytes: "68719476736"
                                    storage_size_gib: 1024
                                    status: NODE_STATUS_AVAILABLE
                                  items:
                                    type: object
                                    properties:
                                      node_name:
                                        type: string
                                        description: The name of a node in the cluster.
                                        example: tiflash-0
                                      availability_zone:
                                        type: string
                                        description: The availability zone of a node
                                          in the cluster.
                                        example: us-west-2a
                                      node_size:
                                        type: string
                                        description: The size of the TiFlash component
                                          in the cluster.
                                        example: 8C64G
                                      vcpu_num:
                                        type: integer
                                        description: The total vCPUs of a node in
                                          the cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `vcpu_num` is always 0.
                                        format: int32
                                        example: 8
                                      ram_bytes:
                                        type: string
                                        description: The RAM size of a node in the
                                          cluster. If the `cluster_type` is `"DEVELOPER"`,
                                          `ram_bytes` is always 0.
                                        format: int64
                                        example: "68719476736"
                                      storage_size_gib:
                                        type: integer
                                        description: The storage size of a node in
                                          the cluster.
                                        format: int32
                                        example: 1024
                                      status:
                                        type: string
                                        description: The status of a node in the cluster.
                                        example: NODE_STATUS_AVAILABLE
                                        enum:
                                        - NODE_STATUS_AVAILABLE
                                        - NODE_STATUS_UNAVAILABLE
                                        - NODE_STATUS_CREATING
                                        - NODE_STATUS_DELETING
                              description: Node map. The `node_map` is returned only
                                when the `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                            connection_strings:
                              type: object
                              properties:
                                default_user:
                                  type: string
                                  description: The default TiDB user for connection.
                                  example: root
                                standard:
                                  type: object
                                  properties:
                                    host:
                                      type: string
                                      description: The host of standard connection.
                                      example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                                    port:
                                      maximum: 65535
                                      minimum: 1024
                                      type: integer
                                      description: |-
                                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                        **Limitations**:
                                        - For a Developer Tier cluster, only port `4000` is available.
                                      format: int32
                                      example: 4000
                                      default: 4000
                                  description: |-
                                    Standard connection string.

                                    You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                                vpc_peering:
                                  type: object
                                  properties:
                                    host:
                                      type: string
                                      description: The host of VPC peering connection.
                                      example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                                    port:
                                      maximum: 65535
                                      minimum: 1024
                                      type: integer
                                      description: |-
                                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                        **Limitations**:
                                        - For a Developer Tier cluster, only port `4000` is available.
                                      format: int32
                                      example: 4000
                                      default: 4000
                                  description: |-
                                    [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                                    You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                              description: Connection strings.
                          description: The status of the cluster.
                      description: ClusterItem is the information of cluster.
                  total:
                    type: integer
                    description: The total number of clusters in the project.
                    format: int64
                    example: 1
                description: GetClustersOfProjectResp is the response for getting
                  clusters of project.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters?page=1&page_size=10'
    post:
      tags:
      - Cluster
      summary: Create a cluster.
      description: Before creating a Dedicated Tier cluster, you must [set a Project
        CIDR](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections#prerequisite-set-a-project-cidr)
        on [TiDB Cloud console](https://tidbcloud.com/).
      operationId: CreateCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateClusterReq
              required:
              - cloud_provider
              - cluster_type
              - config
              - name
              - region
              type: object
              properties:
                name:
                  pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
                  type: string
                  description: The name of the cluster. The name must be 4-64 characters
                    that can only include numbers, letters, and hyphens, and the first
                    and last character must be a letter or number.
                  example: Cluster0
                cluster_type:
                  type: string
                  description: |-
                    The cluster type.
                    - `"DEVELOPER"`: create a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                    - `"DEDICATED"`: create a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster. Before creating a Dedicated Tier cluster, you must [set a Project CIDR](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections#prerequisite-set-a-project-cidr) on [TiDB Cloud console](https://tidbcloud.com/).
                  format: enum
                  example: DEDICATED
                  enum:
                  - DEDICATED
                  - DEVELOPER
                cloud_provider:
                  type: string
                  description: |-
                    The cloud provider on which your TiDB cluster is hosted.
                    - `"AWS"`: the Amazon Web Services cloud provider
                    - `"GCP"`: the Google Cloud Platform cloud provider
                  format: string
                  example: AWS
                  enum:
                  - AWS
                  - GCP
                region:
                  type: string
                  description: |-
                    The region value should match the cloud provider's region code.
                    You can get the complete list of available regions from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                    For example, if you want to deploy the cluster in the Oregon region for AWS, set the value to `"us-west-2"`.
                  example: us-west-2
                config:
                  required:
                  - root_password
                  type: object
                  properties:
                    root_password:
                      maxLength: 64
                      minLength: 8
                      type: string
                      description: The root password to access the cluster. It must
                        be 8-64 characters.
                      example: password_example
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a Developer Tier cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                    components:
                      required:
                      - tidb
                      - tikv
                      type: object
                      properties:
                        tidb:
                          required:
                          - node_quantity
                          - node_size
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiDB of an existing cluster.
                              example: 8C16G
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 2
                          description: The TiDB component of the cluster.
                        tikv:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiKV of an existing cluster.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                                You can get the minimum and maximum of storage size
                                from the response of [List the cloud providers, regions
                                and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiKV.
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 3
                          description: The TiKV component of the cluster.
                        tiflash:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiFlash of an existing cluster.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: |
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiFlash.
                              format: int32
                              example: 1
                          description: The TiFlash component of the cluster.
                      description: |-
                        The components of the cluster.

                        **Limitations**:
                        - For a Dedicated Tier cluster, the `components` parameter is **required**.
                        - For a Developer Tier cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
                      example:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C64G
                          storage_size_gib: 1024
                          node_quantity: 3
                    ip_access_list:
                      type: array
                      description: A list of IP addresses and Classless Inter-Domain
                        Routing (CIDR) addresses that are allowed to access the TiDB
                        Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
                      items:
                        required:
                        - cidr
                        type: object
                        properties:
                          cidr:
                            type: string
                            description: The IP address or CIDR range that you want
                              to add to the cluster's IP access list.
                            example: 8.8.8.8/32
                          description:
                            type: string
                            description: Description that explains the purpose of
                              the entry.
                            example: My Current IP Address
                  description: The configuration of the cluster.
              description: CreateClusterReq is the request for creating cluster.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateClusterResp
                required:
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the cluster.
                    format: uint64
                    example: "1"
                description: CreateClusterResp is the response for creating cluster.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl for Dedicated Tier
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters \
            --header 'content-type: application/json' \
            --data '{"name":"Cluster0","cluster_type":"DEDICATED","cloud_provider":"AWS","region":"us-west-2","config":{"root_password":"password_example","port":4000,"components":{"tidb":{"node_size":"8C16G","node_quantity":2},"tikv":{"node_size":"8C64G","storage_size_gib":1024,"node_quantity":3}},"ip_access_list":[{"cidr":"8.8.8.8/32","description":"My Current IP Address"}]}}'
      - lang: curl for Developer Tier
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters \
            --header 'content-type: application/json' \
            --data '{"name":"Cluster0","cluster_type":"DEVELOPER","cloud_provider":"AWS","region":"us-west-2","config":{"root_password":"password_example","ip_access_list":[{"cidr":"8.8.8.8/32","description":"My IP Address"}]}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}:
    get:
      tags:
      - Cluster
      summary: Get a cluster by ID.
      operationId: GetCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: ClusterItem
                required:
                - id
                - project_id
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the cluster.
                    format: uint64
                    example: "1"
                  project_id:
                    type: string
                    description: The ID of the project.
                    format: uint64
                    example: "1"
                  name:
                    pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
                    type: string
                    description: The name of the cluster.
                    example: Cluster0
                  cluster_type:
                    type: string
                    description: |-
                      The cluster type:
                      - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                      - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster.
                    format: enum
                    example: DEDICATED
                    enum:
                    - DEDICATED
                    - DEVELOPER
                  cloud_provider:
                    type: string
                    description: |-
                      The cloud provider on which your TiDB cluster is hosted.
                      - `"AWS"`: the Amazon Web Services cloud provider
                      - `"GCP"`: the Google Cloud Platform cloud provider
                    format: string
                    example: AWS
                    enum:
                    - AWS
                    - GCP
                  region:
                    type: string
                    description: Region of the cluster.
                    example: us-west-2
                  create_timestamp:
                    type: string
                    description: The creation time of the cluster in Unix timestamp
                      seconds (epoch time).
                    format: timestamp
                    example: "1656991448"
                  config:
                    type: object
                    properties:
                      port:
                        maximum: 65535
                        minimum: 1024
                        type: integer
                        description: The TiDB port for connection. The port must be
                          in the range of 1024-65535 except 10080.
                        format: int32
                        example: 4000
                        default: 4000
                      components:
                        required:
                        - tidb
                        - tikv
                        type: object
                        properties:
                          tidb:
                            required:
                            - node_quantity
                            - node_size
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                  **Limitations**:
                                  - You cannot modify `node_size` for TiDB of an existing cluster.
                                example: 8C16G
                              node_quantity:
                                type: integer
                                description: |
                                  The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                format: int32
                                example: 2
                            description: The TiDB component of the cluster.
                          tikv:
                            required:
                            - node_quantity
                            - node_size
                            - storage_size_gib
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                  **Limitations**:
                                  - You cannot modify `node_size` for TiKV of an existing cluster.
                                example: 8C64G
                              storage_size_gib:
                                type: integer
                                description: The storage size of a node in the cluster.
                                  You can get the minimum and maximum of storage size
                                  from the response of [List the cloud providers,
                                  regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                format: int32
                                example: 1024
                              node_quantity:
                                type: integer
                                description: |-
                                  The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Limitations**:
                                  - You cannot decrease node quantity for TiKV.
                                  - The `node_quantity` of TiKV must be a multiple of 3.
                                format: int32
                                example: 3
                            description: The TiKV component of the cluster.
                          tiflash:
                            required:
                            - node_quantity
                            - node_size
                            - storage_size_gib
                            type: object
                            properties:
                              node_size:
                                type: string
                                description: |-
                                  The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Additional combination rules**:
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                  - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                  **Limitations**:
                                  - You cannot modify `node_size` for TiFlash of an existing cluster.
                                example: 8C64G
                              storage_size_gib:
                                type: integer
                                description: |
                                  The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                                format: int32
                                example: 1024
                              node_quantity:
                                type: integer
                                description: |
                                  The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                  **Limitations**:
                                  - You cannot decrease node quantity for TiFlash.
                                format: int32
                                example: 1
                            description: The TiFlash component of the cluster.
                        description: The components of the cluster.
                        example:
                          tidb:
                            node_size: 8C16G
                            node_quantity: 2
                          tikv:
                            node_size: 8C64G
                            storage_size_gib: 1024
                            node_quantity: 3
                    description: The configuration of the cluster.
                    example:
                      port: 4000
                      components:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C64G
                          storage_size_gib: 1024
                          node_quantity: 3
                  status:
                    title: ClusterItemStatus
                    type: object
                    properties:
                      tidb_version:
                        type: string
                        description: TiDB version.
                        example: v6.1.0
                      cluster_status:
                        type: string
                        description: Status of the cluster.
                        format: enum
                        example: AVAILABLE
                        enum:
                        - AVAILABLE
                        - CREATING
                        - MODIFYING
                        - PAUSED
                        - RESUMING
                        - UNAVAILABLE
                        - IMPORTING
                      node_map:
                        required:
                        - tidb
                        - tikv
                        type: object
                        properties:
                          tidb:
                            type: array
                            description: TiDB node map.
                            example:
                            - node_name: tidb-0
                              availability_zone: us-west-2a
                              node_size: 8C16G
                              vcpu_num: 8
                              ram_bytes: "17179869184"
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tidb-1
                              availability_zone: us-west-2b
                              node_size: 8C16G
                              vcpu_num: 8
                              ram_bytes: "17179869184"
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tidb-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiDB component in the
                                    cluster.
                                  example: 8C16G
                                vcpu_num:
                                  type: integer
                                  description: The total vCPUs of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                    is always 0.
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: The RAM size of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                    is always 0.
                                  format: int64
                                  example: "17179869184"
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                          tikv:
                            type: array
                            description: TiKV node map.
                            example:
                            - node_name: tikv-0
                              availability_zone: us-west-2a
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tikv-1
                              availability_zone: us-west-2b
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tikv-2
                              availability_zone: us-west-2c
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tikv-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiKV component in the
                                    cluster.
                                  example: 8C64G
                                vcpu_num:
                                  type: integer
                                  description: The total vCPUs of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                    is always 0.
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: The RAM size of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                    is always 0.
                                  format: int64
                                  example: "68719476736"
                                storage_size_gib:
                                  type: integer
                                  description: The storage size of a node in the cluster.
                                  format: int32
                                  example: 1024
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                          tiflash:
                            type: array
                            description: TiFlash node map.
                            example:
                            - node_name: tiflash-0
                              availability_zone: us-west-2a
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            - node_name: tiflash-1
                              availability_zone: us-west-2b
                              node_size: 8C64G
                              vcpu_num: 8
                              ram_bytes: "68719476736"
                              storage_size_gib: 1024
                              status: NODE_STATUS_AVAILABLE
                            items:
                              type: object
                              properties:
                                node_name:
                                  type: string
                                  description: The name of a node in the cluster.
                                  example: tiflash-0
                                availability_zone:
                                  type: string
                                  description: The availability zone of a node in
                                    the cluster.
                                  example: us-west-2a
                                node_size:
                                  type: string
                                  description: The size of the TiFlash component in
                                    the cluster.
                                  example: 8C64G
                                vcpu_num:
                                  type: integer
                                  description: The total vCPUs of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                    is always 0.
                                  format: int32
                                  example: 8
                                ram_bytes:
                                  type: string
                                  description: The RAM size of a node in the cluster.
                                    If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                    is always 0.
                                  format: int64
                                  example: "68719476736"
                                storage_size_gib:
                                  type: integer
                                  description: The storage size of a node in the cluster.
                                  format: int32
                                  example: 1024
                                status:
                                  type: string
                                  description: The status of a node in the cluster.
                                  example: NODE_STATUS_AVAILABLE
                                  enum:
                                  - NODE_STATUS_AVAILABLE
                                  - NODE_STATUS_UNAVAILABLE
                                  - NODE_STATUS_CREATING
                                  - NODE_STATUS_DELETING
                        description: Node map. The `node_map` is returned only when
                          the `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                      connection_strings:
                        type: object
                        properties:
                          default_user:
                            type: string
                            description: The default TiDB user for connection.
                            example: root
                          standard:
                            type: object
                            properties:
                              host:
                                type: string
                                description: The host of standard connection.
                                example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                              port:
                                maximum: 65535
                                minimum: 1024
                                type: integer
                                description: |-
                                  The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                  **Limitations**:
                                  - For a Developer Tier cluster, only port `4000` is available.
                                format: int32
                                example: 4000
                                default: 4000
                            description: |-
                              Standard connection string.

                              You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                          vpc_peering:
                            type: object
                            properties:
                              host:
                                type: string
                                description: The host of VPC peering connection.
                                example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                              port:
                                maximum: 65535
                                minimum: 1024
                                type: integer
                                description: |-
                                  The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                                  **Limitations**:
                                  - For a Developer Tier cluster, only port `4000` is available.
                                format: int32
                                example: 4000
                                default: 4000
                            description: |-
                              [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                              You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                        description: Connection strings.
                    description: The status of the cluster.
                description: ClusterItem is the information of cluster.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}
    delete:
      tags:
      - Cluster
      summary: Delete a cluster.
      operationId: DeleteCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request DELETE \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}
    patch:
      tags:
      - Cluster
      summary: Modify a Dedicated Tier cluster.
      description: With this endpoint, you can modify the components of a cluster
        using the `config.components` parameter, or pause or resume a cluster using
        the `config.paused` parameter.
      operationId: UpdateCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of the cluster.
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: UpdateClusterReq
              required:
              - config
              type: object
              properties:
                config:
                  title: UpdateClusterComponents
                  type: object
                  properties:
                    components:
                      type: object
                      properties:
                        tidb:
                          required:
                          - node_quantity
                          type: object
                          properties:
                            node_quantity:
                              type: integer
                              description: The number of nodes in the cluster. You
                                can get the minimum and step of a node quantity from
                                the response of [List the cloud providers, regions
                                and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 3
                          description: The TiDB component of the cluster.
                        tikv:
                          type: object
                          properties:
                            storage_size_gib:
                              type: integer
                              description: |-
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease storage size for TiKV.
                                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiKV.
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 6
                          description: The TiKV component of the cluster.
                        tiflash:
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiFlash of an existing cluster.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: |-
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease storage size for TiFlash.
                                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiFlash.
                              format: int32
                              example: 2
                          description: |-
                            The TiFlash component of the cluster.

                            If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
                      description: The components of the cluster.
                    paused:
                      type: boolean
                      description: |-
                        Flag that indicates whether the cluster is paused. `true` means to pause the cluster, and `false` means to resume the cluster. For more details, refer to [Pause or Resume a TiDB Cluster](https://docs.pingcap.com/tidbcloud/pause-or-resume-tidb-cluster).

                        **Limitations:**
                         - The cluster can be paused only when the `cluster_status` is `"AVAILABLE"`.
                        - The cluster can be resumed only when the `cluster_status` is `"PAUSED"`.
                  description: |-
                    The configuration of the cluster. You can modify the components of the cluster using `components`, or pause or resume the cluster using `paused`.

                     You cannot change the cluster components and cluster status at the same time. That is, `components` and `paused` cannot be set at the same time.
                  example:
                    components:
                      tidb:
                        node_quantity: 3
                      tikv:
                        storage_size_gib: 1024
                        node_quantity: 6
                      tiflash:
                        node_size: 8C64G
                        storage_size_gib: 1024
                        node_quantity: 2
              description: UpdateClusterReq is the request for updating cluster.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request PATCH \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id} \
            --header 'content-type: application/json' \
            --data '{"config":{"components":{"tidb":{"node_quantity":3},"tikv":{"storage_size_gib":1024,"node_quantity":6},"tiflash":{"node_size":"8C64G","storage_size_gib":1024,"node_quantity":2}}}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups:
    get:
      tags:
      - Backup
      summary: List all backups for a cluster.
      description: For Developer Tier clusters, you cannot manage backups via API.
        You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)
        to export your data as backups.
      operationId: ListBackUpOfCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of your cluster. You can get the cluster ID from the response
          of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject).
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListBackupOfClusterResp
                type: object
                properties:
                  items:
                    type: array
                    description: The items of all backups.
                    items:
                      title: ListBackupItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the backup. It is generated by TiDB
                            Cloud.
                          format: uint64
                          example: "1"
                        name:
                          type: string
                          description: The name of the backup.
                          example: backup-1
                        description:
                          type: string
                          description: The description of the backup. It is specified
                            by the user when taking a manual type backup. It helps
                            you add additional information to the backup.
                          example: backup for cluster upgrade in 2022/06/07
                        type:
                          type: string
                          description: The type of backup. TiDB Cloud only supports
                            manual and auto backup. For more information, see [TiDB
                            Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
                          example: MANUAL
                          enum:
                          - MANUAL
                          - AUTO
                        create_timestamp:
                          type: string
                          description: The creation time of the backup in UTC. The
                            time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601)
                            standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS`
                            (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                          format: date-time
                          example: 2020-01-01T00:00:00Z
                        size:
                          type: string
                          description: The bytes of the backup.
                          format: uint64
                          example: "102400"
                        status:
                          type: string
                          description: The status of backup.
                          example: SUCCESS
                          enum:
                          - PENDING
                          - RUNNING
                          - FAILED
                          - SUCCESS
                      description: The item of backup list.
                  total:
                    type: integer
                    description: The total number of backups in the project.
                    format: int64
                    example: 10
                description: The response for listing backups of a cluster.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups?page=1&page_size=10'
    post:
      tags:
      - Backup
      summary: Create a backup for a cluster.
      description: |-
        - For Dedicated Tier clusters, you can create as many manual backups as you need.
        - For Developer Tier clusters, you cannot create backups via API. You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview) to export your data as backups.
      operationId: CreateBackup
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of your cluster that you want to take a manual backup.
          You can get the cluster ID from the response of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject).
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateBackupReq
              required:
              - name
              type: object
              properties:
                name:
                  type: string
                  description: Specify the name for a manual backup. It is recommended
                    that you use a unique name, so that it is easy to distinguish
                    the backup when you query the backups.
                  example: backup-1
                description:
                  type: string
                  description: The description of the backup. It helps you add additional
                    information to the backup. Allows up to 256 characters.
                  example: backup-1
              description: This request for creating a MANUAL type backup.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateBackupResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                description: This response for creating a MANUAL type backup.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups \
            --header 'content-type: application/json' \
            --data '{"name":"backup-1","description":"backup-1"}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}:
    get:
      tags:
      - Backup
      summary: Get a backup for a cluster.
      description: For Developer Tier clusters, you cannot manage backups via API.
        You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)
        to export your data as backups.
      operationId: GetBackupOfCluster
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of your cluster. You can get the cluster ID from the response
          of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject).
        required: true
        schema:
          type: string
          format: uint64
      - name: backup_id
        in: path
        description: The ID of the backup.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetBackupOfClusterResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                  name:
                    type: string
                    description: The name of the backup.
                    example: backup-1
                  description:
                    type: string
                    description: The description of the backup. It is specified by
                      the user when taking a manual type backup. It helps you add
                      additional information to the backup.
                    example: backup for cluster upgrade in 2022/06/07
                  type:
                    type: string
                    description: The type of backup. TiDB Cloud only supports manual
                      and auto backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
                    example: MANUAL
                    enum:
                    - MANUAL
                    - AUTO
                  create_timestamp:
                    type: string
                    description: The creation time of the backup in UTC. The time
                      format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601)
                      standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS`
                      (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                    format: date-time
                    example: 2020-01-01T00:00:00Z
                  size:
                    type: string
                    description: The bytes of the backup.
                    format: uint64
                    example: "102400"
                  status:
                    type: string
                    description: The status of backup.
                    example: SUCCESS
                    enum:
                    - PENDING
                    - RUNNING
                    - FAILED
                    - SUCCESS
                description: This response for getting backup of a cluster.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}
    delete:
      tags:
      - Backup
      summary: Delete a backup for a cluster.
      description: For Developer Tier clusters, you cannot manage backups via API.
        You can use [Dumpling](https://docs.pingcap.com/tidb/stable/dumpling-overview)
        to export your data as backups.
      operationId: DeleteBackup
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: cluster_id
        in: path
        description: The ID of your cluster. You can get the cluster ID from the response
          of [Get all clusters in a project](#tag/Cluster/operation/ListClustersOfProject).
        required: true
        schema:
          type: string
          format: uint64
      - name: backup_id
        in: path
        description: The ID of the backup. You can get the backup ID from the response
          of [List all backups for a cluster](#tag/Project/operation/ListBackUpOfCluster).
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request DELETE \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/clusters/{cluster_id}/backups/{backup_id}
  /api/v1beta/projects/{project_id}/restores:
    get:
      tags:
      - Restore
      summary: List the restore tasks in a project.
      description: |2-

        For Developer Tier clusters, you cannot create or manage restore tasks via API.
      operationId: ListRestoreTasks
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: page
        in: query
        description: The number of pages.
        schema:
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The size of a page.
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: ListRestoreResp
                type: object
                properties:
                  items:
                    type: array
                    description: The items of all restore tasks.
                    items:
                      title: ListRestoreRespItem
                      type: object
                      properties:
                        id:
                          type: string
                          description: The ID of the restore task.
                          format: uint64
                          example: "1"
                        create_timestamp:
                          type: string
                          description: |-
                            The creation time of the backup in UTC.

                            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                          format: date-time
                          example: 2020-01-01T00:00:00Z
                        backup_id:
                          type: string
                          description: The ID of the backup.
                          format: uint64
                          example: "1"
                        cluster_id:
                          type: string
                          description: The cluster ID of the backup.
                          format: uint64
                          example: "1"
                        status:
                          type: string
                          description: The status of the restore task.
                          example: PENDING
                          enum:
                          - PENDING
                          - RUNNING
                          - FAILED
                          - SUCCESS
                        cluster:
                          title: ClusterInfoOfRestore
                          type: object
                          properties:
                            id:
                              type: string
                              description: The ID of the restored cluster. The restored
                                cluster is the new cluster your backup data is restored
                                to.
                              format: uint64
                              example: "1"
                            name:
                              type: string
                              description: The name of the restored cluster. The restored
                                cluster is the new cluster your backup data is restored
                                to.
                              example: cluster-1
                            status:
                              type: string
                              description: The status of the restored cluster. Possible
                                values are `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`,
                                `"PAUSED"`, `"RESUMING"`, `"UNAVAILABLE"`, `"IMPORTING"`,
                                and `"CLEARED"`.
                              example: AVAILABLE
                          description: The information of the restored cluster. The
                            restored cluster is the new cluster your backup data is
                            restored to.
                        error_message:
                          type: string
                          description: The error message of restore if failed.
                          example: Please contact support.
                      description: The items of all restore tasks.
                  total:
                    type: integer
                    description: The total number of restore tasks in the project.
                    format: int64
                    example: 10
                description: This response for list restore.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url 'https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores?page=1&page_size=10'
    post:
      tags:
      - Restore
      summary: Create a restore task.
      description: |-
        You can use this endpoint to restore data from a previously created backup file to a new cluster. In this endpoint, you must specify the configuration of the new cluster you want to restore data to.

        **Limitations:**

        - For Dedicated Tier, you can only restore data from a smaller node size to a larger node size.

        - You cannot restore data from a Dedicated Tier cluster to a Developer Tier cluster.

        For Developer Tier clusters, you cannot create restore tasks via API.
      operationId: CreateRestoreTask
      parameters:
      - name: project_id
        in: path
        description: The ID of the project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      requestBody:
        content:
          application/json:
            schema:
              title: CreateRestoreReq
              required:
              - backup_id
              - name
              type: object
              properties:
                backup_id:
                  type: string
                  description: The ID of the backup.
                  format: uint64
                  example: "1"
                name:
                  pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
                  type: string
                  description: |-
                    The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.

                    - The name must be 4-64 characters that only contain numbers, letters, and hyphens. The first and last character must be a letter or number.
                    - This must be different from the name of the existing cluster.
                  example: Cluster0
                config:
                  required:
                  - root_password
                  type: object
                  properties:
                    root_password:
                      maxLength: 64
                      minLength: 8
                      type: string
                      description: The root password to access the cluster. It must
                        be 8-64 characters.
                      example: password_example
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a Developer Tier cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                    components:
                      required:
                      - tidb
                      - tikv
                      type: object
                      properties:
                        tidb:
                          required:
                          - node_quantity
                          - node_size
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiDB of an existing cluster.
                              example: 8C16G
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 2
                          description: The TiDB component of the cluster.
                        tikv:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiKV of an existing cluster.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                                You can get the minimum and maximum of storage size
                                from the response of [List the cloud providers, regions
                                and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |-
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiKV.
                                - The `node_quantity` of TiKV must be a multiple of 3.
                              format: int32
                              example: 3
                          description: The TiKV component of the cluster.
                        tiflash:
                          required:
                          - node_quantity
                          - node_size
                          - storage_size_gib
                          type: object
                          properties:
                            node_size:
                              type: string
                              description: |-
                                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Additional combination rules**:
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                                **Limitations**:
                                - You cannot modify `node_size` for TiFlash of an existing cluster.
                              example: 8C64G
                            storage_size_gib:
                              type: integer
                              description: |
                                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                              format: int32
                              example: 1024
                            node_quantity:
                              type: integer
                              description: |
                                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                                **Limitations**:
                                - You cannot decrease node quantity for TiFlash.
                              format: int32
                              example: 1
                          description: The TiFlash component of the cluster.
                      description: |-
                        The components of the cluster.

                        **Limitations**:
                        - For a Dedicated Tier cluster, the `components` parameter is **required**.
                        - For a Developer Tier cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
                      example:
                        tidb:
                          node_size: 8C16G
                          node_quantity: 2
                        tikv:
                          node_size: 8C64G
                          storage_size_gib: 1024
                          node_quantity: 3
                    ip_access_list:
                      type: array
                      description: A list of IP addresses and Classless Inter-Domain
                        Routing (CIDR) addresses that are allowed to access the TiDB
                        Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
                      items:
                        required:
                        - cidr
                        type: object
                        properties:
                          cidr:
                            type: string
                            description: The IP address or CIDR range that you want
                              to add to the cluster's IP access list.
                            example: 8.8.8.8/32
                          description:
                            type: string
                            description: Description that explains the purpose of
                              the entry.
                            example: My Current IP Address
                  description: The configuration of the cluster.
              description: CreateRestoreReq is the request for restoring backup to
                a new cluster.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: CreateRestoreResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restore task.
                    format: uint64
                    example: "1"
                  cluster_id:
                    type: string
                    description: The ID of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    format: uint64
                    example: "1"
                description: CreateRestoreResp is the response for restoring backup
                  to a new cluster.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request POST \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores \
            --header 'content-type: application/json' \
            --data '{"backup_id":"1","name":"Cluster0","config":{"root_password":"password_example","port":4000,"components":{"tidb":{"node_size":"8C16G","node_quantity":2},"tikv":{"node_size":"8C64G","storage_size_gib":1024,"node_quantity":3}},"ip_access_list":[{"cidr":"8.8.8.8/32","description":"My Current IP Address"}]}}'
      x-codegen-request-body-name: body
  /api/v1beta/projects/{project_id}/restores/{restore_id}:
    get:
      tags:
      - Restore
      summary: Get a restore task.
      description: |2-

        For Developer Tier clusters, you cannot manage restore tasks via API.
      operationId: GetRestoreTask
      parameters:
      - name: project_id
        in: path
        description: The ID of your project. You can get the project ID from the response
          of [List all accessible projects.](#tag/Project/operation/ListProjects).
        required: true
        schema:
          type: string
          format: uint64
      - name: restore_id
        in: path
        description: The ID of the restore task.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                title: GetRestoreResp
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restore task.
                    format: uint64
                    example: "1"
                  create_timestamp:
                    type: string
                    description: |-
                      The creation time of the backup in UTC.

                      The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                    format: date-time
                    example: 2020-01-01T00:00:00Z
                  backup_id:
                    type: string
                    description: The ID of the backup.
                    format: uint64
                    example: "1"
                  cluster_id:
                    type: string
                    description: The cluster ID of the backup.
                    format: uint64
                    example: "1"
                  status:
                    type: string
                    description: The status of the restore task.
                    example: PENDING
                    enum:
                    - PENDING
                    - RUNNING
                    - FAILED
                    - SUCCESS
                  cluster:
                    title: ClusterInfoOfRestore
                    type: object
                    properties:
                      id:
                        type: string
                        description: The ID of the restored cluster. The restored
                          cluster is the new cluster your backup data is restored
                          to.
                        format: uint64
                        example: "1"
                      name:
                        type: string
                        description: The name of the restored cluster. The restored
                          cluster is the new cluster your backup data is restored
                          to.
                        example: cluster-1
                      status:
                        type: string
                        description: The status of the restored cluster. Possible
                          values are `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`, `"PAUSED"`,
                          `"RESUMING"`, `"UNAVAILABLE"`, `"IMPORTING"`, and `"CLEARED"`.
                        example: AVAILABLE
                    description: The information of the restored cluster. The restored
                      cluster is the new cluster your backup data is restored to.
                  error_message:
                    type: string
                    description: The error message of restore if failed.
                    example: Please contact support.
                description: The response for get restore.
        400:
          description: A request field is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        401:
          description: The API key cannot be authenticated.
          content:
            application/json:
              schema:
                type: object
        403:
          description: The API key does not have permission to access the resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        404:
          description: The requested resource does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        429:
          description: You have exceed the rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    title: code
                    type: integer
                    description: Error code returned with this error.
                    format: integer
                  message:
                    title: message
                    type: string
                    description: Error message returned with this error.
                  details:
                    title: details
                    type: array
                    description: Error details returned with this error.
                    items:
                      type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-code-samples:
      - lang: curl
        source: |-
          curl --digest \
            --user 'YOUR_PUBLIC_KEY:YOUR_PRIVATE_KEY' \
            --request GET \
            --url https://api.tidbcloud.com/api/v1beta/projects/{project_id}/restores/{restore_id}
security:
  - DigestAuth: []
components:
  securitySchemes:
    DigestAuth:
      type: http
      scheme: digest
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          title: code
          type: integer
          description: Error code returned with this error.
          format: integer
        message:
          title: message
          type: string
          description: Error message returned with this error.
        details:
          title: details
          type: array
          description: Error details returned with this error.
          items:
            type: string
    openapiBackupTypeEnum:
      type: string
      enum:
      - MANUAL
      - AUTO
    openapiCloudProvider:
      type: string
      enum:
      - AWS
      - GCP
    openapiClusterComponents:
      required:
      - tidb
      - tikv
      type: object
      properties:
        tidb:
          required:
          - node_quantity
          - node_size
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                **Limitations**:
                - You cannot modify `node_size` for TiDB of an existing cluster.
              example: 8C16G
            node_quantity:
              type: integer
              description: |
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 2
          description: The TiDB component of the cluster.
        tikv:
          required:
          - node_quantity
          - node_size
          - storage_size_gib
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                **Limitations**:
                - You cannot modify `node_size` for TiKV of an existing cluster.
              example: 8C64G
            storage_size_gib:
              type: integer
              description: The storage size of a node in the cluster. You can get
                the minimum and maximum of storage size from the response of [List
                the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: |-
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease node quantity for TiKV.
                - The `node_quantity` of TiKV must be a multiple of 3.
              format: int32
              example: 3
          description: The TiKV component of the cluster.
        tiflash:
          required:
          - node_quantity
          - node_size
          - storage_size_gib
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                **Limitations**:
                - You cannot modify `node_size` for TiFlash of an existing cluster.
              example: 8C64G
            storage_size_gib:
              type: integer
              description: |
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: |
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease node quantity for TiFlash.
              format: int32
              example: 1
          description: The TiFlash component of the cluster.
    openapiClusterConfig:
      required:
      - root_password
      type: object
      properties:
        root_password:
          maxLength: 64
          minLength: 8
          type: string
          description: The root password to access the cluster. It must be 8-64 characters.
          example: password_example
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a Developer Tier cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
        components:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              required:
              - node_quantity
              - node_size
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiDB of an existing cluster.
                  example: 8C16G
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 2
              description: The TiDB component of the cluster.
            tikv:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiKV of an existing cluster.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: The storage size of a node in the cluster. You can
                    get the minimum and maximum of storage size from the response
                    of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiKV.
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 3
              description: The TiKV component of the cluster.
            tiflash:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiFlash of an existing cluster.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: |
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiFlash.
                  format: int32
                  example: 1
              description: The TiFlash component of the cluster.
          description: |-
            The components of the cluster.

            **Limitations**:
            - For a Dedicated Tier cluster, the `components` parameter is **required**.
            - For a Developer Tier cluster, the `components` value is **ignored**. Setting this configuration does not have any effects.
          example:
            tidb:
              node_size: 8C16G
              node_quantity: 2
            tikv:
              node_size: 8C64G
              storage_size_gib: 1024
              node_quantity: 3
        ip_access_list:
          type: array
          description: A list of IP addresses and Classless Inter-Domain Routing (CIDR)
            addresses that are allowed to access the TiDB Cloud cluster via [standard
            connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
          items:
            required:
            - cidr
            type: object
            properties:
              cidr:
                type: string
                description: The IP address or CIDR range that you want to add to
                  the cluster's IP access list.
                example: 8.8.8.8/32
              description:
                type: string
                description: Description that explains the purpose of the entry.
                example: My Current IP Address
    openapiClusterConnectionStrings:
      type: object
      properties:
        default_user:
          type: string
          description: The default TiDB user for connection.
          example: root
        standard:
          type: object
          properties:
            host:
              type: string
              description: The host of standard connection.
              example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: |-
                The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                **Limitations**:
                - For a Developer Tier cluster, only port `4000` is available.
              format: int32
              example: 4000
              default: 4000
          description: |-
            Standard connection string.

            You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
        vpc_peering:
          type: object
          properties:
            host:
              type: string
              description: The host of VPC peering connection.
              example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: |-
                The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                **Limitations**:
                - For a Developer Tier cluster, only port `4000` is available.
              format: int32
              example: 4000
              default: 4000
          description: |-
            [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

            You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
    openapiClusterInfoOfRestore:
      title: ClusterInfoOfRestore
      type: object
      properties:
        id:
          type: string
          description: The ID of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          example: cluster-1
        status:
          type: string
          description: The status of the restored cluster. Possible values are `"AVAILABLE"`,
            `"CREATING"`, `"MODIFYING"`, `"PAUSED"`, `"RESUMING"`, `"UNAVAILABLE"`,
            `"IMPORTING"`, and `"CLEARED"`.
          example: AVAILABLE
      description: The information of the restored cluster. The restored cluster is
        the new cluster your backup data is restored to.
    openapiClusterItem:
      title: ClusterItem
      required:
      - id
      - project_id
      type: object
      properties:
        id:
          type: string
          description: The ID of the cluster.
          format: uint64
          example: "1"
        project_id:
          type: string
          description: The ID of the project.
          format: uint64
          example: "1"
        name:
          pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
          type: string
          description: The name of the cluster.
          example: Cluster0
        cluster_type:
          type: string
          description: |-
            The cluster type:
            - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
            - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster.
          format: enum
          example: DEDICATED
          enum:
          - DEDICATED
          - DEVELOPER
        cloud_provider:
          type: string
          description: |-
            The cloud provider on which your TiDB cluster is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud Platform cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        region:
          type: string
          description: Region of the cluster.
          example: us-west-2
        create_timestamp:
          type: string
          description: The creation time of the cluster in Unix timestamp seconds
            (epoch time).
          format: timestamp
          example: "1656991448"
        config:
          type: object
          properties:
            port:
              maximum: 65535
              minimum: 1024
              type: integer
              description: The TiDB port for connection. The port must be in the range
                of 1024-65535 except 10080.
              format: int32
              example: 4000
              default: 4000
            components:
              required:
              - tidb
              - tikv
              type: object
              properties:
                tidb:
                  required:
                  - node_quantity
                  - node_size
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                        **Limitations**:
                        - You cannot modify `node_size` for TiDB of an existing cluster.
                      example: 8C16G
                    node_quantity:
                      type: integer
                      description: |
                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                      format: int32
                      example: 2
                  description: The TiDB component of the cluster.
                tikv:
                  required:
                  - node_quantity
                  - node_size
                  - storage_size_gib
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                        **Limitations**:
                        - You cannot modify `node_size` for TiKV of an existing cluster.
                      example: 8C64G
                    storage_size_gib:
                      type: integer
                      description: The storage size of a node in the cluster. You
                        can get the minimum and maximum of storage size from the response
                        of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                      format: int32
                      example: 1024
                    node_quantity:
                      type: integer
                      description: |-
                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Limitations**:
                        - You cannot decrease node quantity for TiKV.
                        - The `node_quantity` of TiKV must be a multiple of 3.
                      format: int32
                      example: 3
                  description: The TiKV component of the cluster.
                tiflash:
                  required:
                  - node_quantity
                  - node_size
                  - storage_size_gib
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: |-
                        The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Additional combination rules**:
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                        - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                        **Limitations**:
                        - You cannot modify `node_size` for TiFlash of an existing cluster.
                      example: 8C64G
                    storage_size_gib:
                      type: integer
                      description: |
                        The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                      format: int32
                      example: 1024
                    node_quantity:
                      type: integer
                      description: |
                        The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                        **Limitations**:
                        - You cannot decrease node quantity for TiFlash.
                      format: int32
                      example: 1
                  description: The TiFlash component of the cluster.
              description: The components of the cluster.
              example:
                tidb:
                  node_size: 8C16G
                  node_quantity: 2
                tikv:
                  node_size: 8C64G
                  storage_size_gib: 1024
                  node_quantity: 3
          description: The configuration of the cluster.
          example:
            port: 4000
            components:
              tidb:
                node_size: 8C16G
                node_quantity: 2
              tikv:
                node_size: 8C64G
                storage_size_gib: 1024
                node_quantity: 3
        status:
          title: ClusterItemStatus
          type: object
          properties:
            tidb_version:
              type: string
              description: TiDB version.
              example: v6.1.0
            cluster_status:
              type: string
              description: Status of the cluster.
              format: enum
              example: AVAILABLE
              enum:
              - AVAILABLE
              - CREATING
              - MODIFYING
              - PAUSED
              - RESUMING
              - UNAVAILABLE
              - IMPORTING
            node_map:
              required:
              - tidb
              - tikv
              type: object
              properties:
                tidb:
                  type: array
                  description: TiDB node map.
                  example:
                  - node_name: tidb-0
                    availability_zone: us-west-2a
                    node_size: 8C16G
                    vcpu_num: 8
                    ram_bytes: "17179869184"
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tidb-1
                    availability_zone: us-west-2b
                    node_size: 8C16G
                    vcpu_num: 8
                    ram_bytes: "17179869184"
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tidb-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiDB component in the cluster.
                        example: 8C16G
                      vcpu_num:
                        type: integer
                        description: The total vCPUs of a node in the cluster. If
                          the `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always
                          0.
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: The RAM size of a node in the cluster. If the
                          `cluster_type` is `"DEVELOPER"`, `ram_bytes` is always 0.
                        format: int64
                        example: "17179869184"
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
                tikv:
                  type: array
                  description: TiKV node map.
                  example:
                  - node_name: tikv-0
                    availability_zone: us-west-2a
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tikv-1
                    availability_zone: us-west-2b
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tikv-2
                    availability_zone: us-west-2c
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tikv-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiKV component in the cluster.
                        example: 8C64G
                      vcpu_num:
                        type: integer
                        description: The total vCPUs of a node in the cluster. If
                          the `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always
                          0.
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: The RAM size of a node in the cluster. If the
                          `cluster_type` is `"DEVELOPER"`, `ram_bytes` is always 0.
                        format: int64
                        example: "68719476736"
                      storage_size_gib:
                        type: integer
                        description: The storage size of a node in the cluster.
                        format: int32
                        example: 1024
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
                tiflash:
                  type: array
                  description: TiFlash node map.
                  example:
                  - node_name: tiflash-0
                    availability_zone: us-west-2a
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  - node_name: tiflash-1
                    availability_zone: us-west-2b
                    node_size: 8C64G
                    vcpu_num: 8
                    ram_bytes: "68719476736"
                    storage_size_gib: 1024
                    status: NODE_STATUS_AVAILABLE
                  items:
                    type: object
                    properties:
                      node_name:
                        type: string
                        description: The name of a node in the cluster.
                        example: tiflash-0
                      availability_zone:
                        type: string
                        description: The availability zone of a node in the cluster.
                        example: us-west-2a
                      node_size:
                        type: string
                        description: The size of the TiFlash component in the cluster.
                        example: 8C64G
                      vcpu_num:
                        type: integer
                        description: The total vCPUs of a node in the cluster. If
                          the `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always
                          0.
                        format: int32
                        example: 8
                      ram_bytes:
                        type: string
                        description: The RAM size of a node in the cluster. If the
                          `cluster_type` is `"DEVELOPER"`, `ram_bytes` is always 0.
                        format: int64
                        example: "68719476736"
                      storage_size_gib:
                        type: integer
                        description: The storage size of a node in the cluster.
                        format: int32
                        example: 1024
                      status:
                        type: string
                        description: The status of a node in the cluster.
                        example: NODE_STATUS_AVAILABLE
                        enum:
                        - NODE_STATUS_AVAILABLE
                        - NODE_STATUS_UNAVAILABLE
                        - NODE_STATUS_CREATING
                        - NODE_STATUS_DELETING
              description: Node map. The `node_map` is returned only when the `cluster_status`
                is `"AVAILABLE"` or `"MODIFYING"`.
            connection_strings:
              type: object
              properties:
                default_user:
                  type: string
                  description: The default TiDB user for connection.
                  example: root
                standard:
                  type: object
                  properties:
                    host:
                      type: string
                      description: The host of standard connection.
                      example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a Developer Tier cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                  description: |-
                    Standard connection string.

                    You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                vpc_peering:
                  type: object
                  properties:
                    host:
                      type: string
                      description: The host of VPC peering connection.
                      example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                    port:
                      maximum: 65535
                      minimum: 1024
                      type: integer
                      description: |-
                        The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                        **Limitations**:
                        - For a Developer Tier cluster, only port `4000` is available.
                      format: int32
                      example: 4000
                      default: 4000
                  description: |-
                    [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                    You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
              description: Connection strings.
          description: The status of the cluster.
      description: ClusterItem is the information of cluster.
    openapiClusterItemStatus:
      title: ClusterItemStatus
      type: object
      properties:
        tidb_version:
          type: string
          description: TiDB version.
          example: v6.1.0
        cluster_status:
          type: string
          description: Status of the cluster.
          format: enum
          example: AVAILABLE
          enum:
          - AVAILABLE
          - CREATING
          - MODIFYING
          - PAUSED
          - RESUMING
          - UNAVAILABLE
          - IMPORTING
        node_map:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              type: array
              description: TiDB node map.
              example:
              - node_name: tidb-0
                availability_zone: us-west-2a
                node_size: 8C16G
                vcpu_num: 8
                ram_bytes: "17179869184"
                status: NODE_STATUS_AVAILABLE
              - node_name: tidb-1
                availability_zone: us-west-2b
                node_size: 8C16G
                vcpu_num: 8
                ram_bytes: "17179869184"
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tidb-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiDB component in the cluster.
                    example: 8C16G
                  vcpu_num:
                    type: integer
                    description: The total vCPUs of a node in the cluster. If the
                      `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always 0.
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: The RAM size of a node in the cluster. If the `cluster_type`
                      is `"DEVELOPER"`, `ram_bytes` is always 0.
                    format: int64
                    example: "17179869184"
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
            tikv:
              type: array
              description: TiKV node map.
              example:
              - node_name: tikv-0
                availability_zone: us-west-2a
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tikv-1
                availability_zone: us-west-2b
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tikv-2
                availability_zone: us-west-2c
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tikv-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiKV component in the cluster.
                    example: 8C64G
                  vcpu_num:
                    type: integer
                    description: The total vCPUs of a node in the cluster. If the
                      `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always 0.
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: The RAM size of a node in the cluster. If the `cluster_type`
                      is `"DEVELOPER"`, `ram_bytes` is always 0.
                    format: int64
                    example: "68719476736"
                  storage_size_gib:
                    type: integer
                    description: The storage size of a node in the cluster.
                    format: int32
                    example: 1024
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
            tiflash:
              type: array
              description: TiFlash node map.
              example:
              - node_name: tiflash-0
                availability_zone: us-west-2a
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              - node_name: tiflash-1
                availability_zone: us-west-2b
                node_size: 8C64G
                vcpu_num: 8
                ram_bytes: "68719476736"
                storage_size_gib: 1024
                status: NODE_STATUS_AVAILABLE
              items:
                type: object
                properties:
                  node_name:
                    type: string
                    description: The name of a node in the cluster.
                    example: tiflash-0
                  availability_zone:
                    type: string
                    description: The availability zone of a node in the cluster.
                    example: us-west-2a
                  node_size:
                    type: string
                    description: The size of the TiFlash component in the cluster.
                    example: 8C64G
                  vcpu_num:
                    type: integer
                    description: The total vCPUs of a node in the cluster. If the
                      `cluster_type` is `"DEVELOPER"`, `vcpu_num` is always 0.
                    format: int32
                    example: 8
                  ram_bytes:
                    type: string
                    description: The RAM size of a node in the cluster. If the `cluster_type`
                      is `"DEVELOPER"`, `ram_bytes` is always 0.
                    format: int64
                    example: "68719476736"
                  storage_size_gib:
                    type: integer
                    description: The storage size of a node in the cluster.
                    format: int32
                    example: 1024
                  status:
                    type: string
                    description: The status of a node in the cluster.
                    example: NODE_STATUS_AVAILABLE
                    enum:
                    - NODE_STATUS_AVAILABLE
                    - NODE_STATUS_UNAVAILABLE
                    - NODE_STATUS_CREATING
                    - NODE_STATUS_DELETING
          description: Node map. The `node_map` is returned only when the `cluster_status`
            is `"AVAILABLE"` or `"MODIFYING"`.
        connection_strings:
          type: object
          properties:
            default_user:
              type: string
              description: The default TiDB user for connection.
              example: root
            standard:
              type: object
              properties:
                host:
                  type: string
                  description: The host of standard connection.
                  example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                port:
                  maximum: 65535
                  minimum: 1024
                  type: integer
                  description: |-
                    The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                    **Limitations**:
                    - For a Developer Tier cluster, only port `4000` is available.
                  format: int32
                  example: 4000
                  default: 4000
              description: |-
                Standard connection string.

                You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
            vpc_peering:
              type: object
              properties:
                host:
                  type: string
                  description: The host of VPC peering connection.
                  example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                port:
                  maximum: 65535
                  minimum: 1024
                  type: integer
                  description: |-
                    The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                    **Limitations**:
                    - For a Developer Tier cluster, only port `4000` is available.
                  format: int32
                  example: 4000
                  default: 4000
              description: |-
                [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
          description: Connection strings.
      description: ClusterItemStatus is the status of cluster.
    openapiClusterNodeMap:
      required:
      - tidb
      - tikv
      type: object
      properties:
        tidb:
          type: array
          description: TiDB node map.
          example:
          - node_name: tidb-0
            availability_zone: us-west-2a
            node_size: 8C16G
            vcpu_num: 8
            ram_bytes: "17179869184"
            status: NODE_STATUS_AVAILABLE
          - node_name: tidb-1
            availability_zone: us-west-2b
            node_size: 8C16G
            vcpu_num: 8
            ram_bytes: "17179869184"
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tidb-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiDB component in the cluster.
                example: 8C16G
              vcpu_num:
                type: integer
                description: The total vCPUs of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `vcpu_num` is always 0.
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: The RAM size of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `ram_bytes` is always 0.
                format: int64
                example: "17179869184"
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
        tikv:
          type: array
          description: TiKV node map.
          example:
          - node_name: tikv-0
            availability_zone: us-west-2a
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tikv-1
            availability_zone: us-west-2b
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tikv-2
            availability_zone: us-west-2c
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tikv-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiKV component in the cluster.
                example: 8C64G
              vcpu_num:
                type: integer
                description: The total vCPUs of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `vcpu_num` is always 0.
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: The RAM size of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `ram_bytes` is always 0.
                format: int64
                example: "68719476736"
              storage_size_gib:
                type: integer
                description: The storage size of a node in the cluster.
                format: int32
                example: 1024
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
        tiflash:
          type: array
          description: TiFlash node map.
          example:
          - node_name: tiflash-0
            availability_zone: us-west-2a
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          - node_name: tiflash-1
            availability_zone: us-west-2b
            node_size: 8C64G
            vcpu_num: 8
            ram_bytes: "68719476736"
            storage_size_gib: 1024
            status: NODE_STATUS_AVAILABLE
          items:
            type: object
            properties:
              node_name:
                type: string
                description: The name of a node in the cluster.
                example: tiflash-0
              availability_zone:
                type: string
                description: The availability zone of a node in the cluster.
                example: us-west-2a
              node_size:
                type: string
                description: The size of the TiFlash component in the cluster.
                example: 8C64G
              vcpu_num:
                type: integer
                description: The total vCPUs of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `vcpu_num` is always 0.
                format: int32
                example: 8
              ram_bytes:
                type: string
                description: The RAM size of a node in the cluster. If the `cluster_type`
                  is `"DEVELOPER"`, `ram_bytes` is always 0.
                format: int64
                example: "68719476736"
              storage_size_gib:
                type: integer
                description: The storage size of a node in the cluster.
                format: int32
                example: 1024
              status:
                type: string
                description: The status of a node in the cluster.
                example: NODE_STATUS_AVAILABLE
                enum:
                - NODE_STATUS_AVAILABLE
                - NODE_STATUS_UNAVAILABLE
                - NODE_STATUS_CREATING
                - NODE_STATUS_DELETING
    openapiClusterStatus:
      type: string
      enum:
      - AVAILABLE
      - CREATING
      - MODIFYING
      - PAUSED
      - RESUMING
      - UNAVAILABLE
      - IMPORTING
    openapiClusterType:
      type: string
      enum:
      - DEDICATED
      - DEVELOPER
    openapiCreateBackupResp:
      title: CreateBackupResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
      description: This response for creating a MANUAL type backup.
    openapiCreateClusterResp:
      title: CreateClusterResp
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the cluster.
          format: uint64
          example: "1"
      description: CreateClusterResp is the response for creating cluster.
    openapiCreateRestoreResp:
      title: CreateRestoreResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The ID of the restored cluster. The restored cluster is the
            new cluster your backup data is restored to.
          format: uint64
          example: "1"
      description: CreateRestoreResp is the response for restoring backup to a new
        cluster.
    openapiGetBackupOfClusterResp:
      title: GetBackupOfClusterResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the backup.
          example: backup-1
        description:
          type: string
          description: The description of the backup. It is specified by the user
            when taking a manual type backup. It helps you add additional information
            to the backup.
          example: backup for cluster upgrade in 2022/06/07
        type:
          type: string
          description: The type of backup. TiDB Cloud only supports manual and auto
            backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
          example: MANUAL
          enum:
          - MANUAL
          - AUTO
        create_timestamp:
          type: string
          description: The creation time of the backup in UTC. The time format follows
            the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is
            `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) +
            Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        size:
          type: string
          description: The bytes of the backup.
          format: uint64
          example: "102400"
        status:
          type: string
          description: The status of backup.
          example: SUCCESS
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
      description: This response for getting backup of a cluster.
    openapiGetBackupOfClusterRespStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiGetClusterConfig:
      type: object
      properties:
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: The TiDB port for connection. The port must be in the range
            of 1024-65535 except 10080.
          format: int32
          example: 4000
          default: 4000
        components:
          required:
          - tidb
          - tikv
          type: object
          properties:
            tidb:
              required:
              - node_quantity
              - node_size
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiDB of an existing cluster.
                  example: 8C16G
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 2
              description: The TiDB component of the cluster.
            tikv:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiKV of an existing cluster.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: The storage size of a node in the cluster. You can
                    get the minimum and maximum of storage size from the response
                    of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiKV.
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 3
              description: The TiKV component of the cluster.
            tiflash:
              required:
              - node_quantity
              - node_size
              - storage_size_gib
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiFlash of an existing cluster.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: |
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiFlash.
                  format: int32
                  example: 1
              description: The TiFlash component of the cluster.
          description: The components of the cluster.
          example:
            tidb:
              node_size: 8C16G
              node_quantity: 2
            tikv:
              node_size: 8C64G
              storage_size_gib: 1024
              node_quantity: 3
    openapiGetRestoreResp:
      title: GetRestoreResp
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        create_timestamp:
          type: string
          description: |-
            The creation time of the backup in UTC.

            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        backup_id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The cluster ID of the backup.
          format: uint64
          example: "1"
        status:
          type: string
          description: The status of the restore task.
          example: PENDING
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
        cluster:
          title: ClusterInfoOfRestore
          type: object
          properties:
            id:
              type: string
              description: The ID of the restored cluster. The restored cluster is
                the new cluster your backup data is restored to.
              format: uint64
              example: "1"
            name:
              type: string
              description: The name of the restored cluster. The restored cluster
                is the new cluster your backup data is restored to.
              example: cluster-1
            status:
              type: string
              description: The status of the restored cluster. Possible values are
                `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`, `"PAUSED"`, `"RESUMING"`,
                `"UNAVAILABLE"`, `"IMPORTING"`, and `"CLEARED"`.
              example: AVAILABLE
          description: The information of the restored cluster. The restored cluster
            is the new cluster your backup data is restored to.
        error_message:
          type: string
          description: The error message of restore if failed.
          example: Please contact support.
      description: The response for get restore.
    openapiGetRestoreRespStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiIpAccessListItem:
      required:
      - cidr
      type: object
      properties:
        cidr:
          type: string
          description: The IP address or CIDR range that you want to add to the cluster's
            IP access list.
          example: 8.8.8.8/32
        description:
          type: string
          description: Description that explains the purpose of the entry.
          example: My Current IP Address
    openapiListBackupItem:
      title: ListBackupItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the backup. It is generated by TiDB Cloud.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the backup.
          example: backup-1
        description:
          type: string
          description: The description of the backup. It is specified by the user
            when taking a manual type backup. It helps you add additional information
            to the backup.
          example: backup for cluster upgrade in 2022/06/07
        type:
          type: string
          description: The type of backup. TiDB Cloud only supports manual and auto
            backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
          example: MANUAL
          enum:
          - MANUAL
          - AUTO
        create_timestamp:
          type: string
          description: The creation time of the backup in UTC. The time format follows
            the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is
            `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) +
            Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        size:
          type: string
          description: The bytes of the backup.
          format: uint64
          example: "102400"
        status:
          type: string
          description: The status of backup.
          example: SUCCESS
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
      description: The item of backup list.
    openapiListBackupItemStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiListBackupOfClusterResp:
      title: ListBackupOfClusterResp
      type: object
      properties:
        items:
          type: array
          description: The items of all backups.
          items:
            title: ListBackupItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the backup. It is generated by TiDB Cloud.
                format: uint64
                example: "1"
              name:
                type: string
                description: The name of the backup.
                example: backup-1
              description:
                type: string
                description: The description of the backup. It is specified by the
                  user when taking a manual type backup. It helps you add additional
                  information to the backup.
                example: backup for cluster upgrade in 2022/06/07
              type:
                type: string
                description: The type of backup. TiDB Cloud only supports manual and
                  auto backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
                example: MANUAL
                enum:
                - MANUAL
                - AUTO
              create_timestamp:
                type: string
                description: The creation time of the backup in UTC. The time format
                  follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard,
                  which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds)
                  + Z. For example, `2020-01-01T00:00:00Z`.
                format: date-time
                example: 2020-01-01T00:00:00Z
              size:
                type: string
                description: The bytes of the backup.
                format: uint64
                example: "102400"
              status:
                type: string
                description: The status of backup.
                example: SUCCESS
                enum:
                - PENDING
                - RUNNING
                - FAILED
                - SUCCESS
            description: The item of backup list.
        total:
          type: integer
          description: The total number of backups in the project.
          format: int64
          example: 10
      description: The response for listing backups of a cluster.
    openapiListClustersOfProjectResp:
      title: GetClustersOfProjectResp
      required:
      - items
      - total
      type: object
      properties:
        items:
          type: array
          description: The items of clusters in the project.
          items:
            title: ClusterItem
            required:
            - id
            - project_id
            type: object
            properties:
              id:
                type: string
                description: The ID of the cluster.
                format: uint64
                example: "1"
              project_id:
                type: string
                description: The ID of the project.
                format: uint64
                example: "1"
              name:
                pattern: ^[A-Za-z0-9][-A-Za-z0-9]{2,62}[A-Za-z0-9]$
                type: string
                description: The name of the cluster.
                example: Cluster0
              cluster_type:
                type: string
                description: |-
                  The cluster type:
                  - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                  - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster.
                format: enum
                example: DEDICATED
                enum:
                - DEDICATED
                - DEVELOPER
              cloud_provider:
                type: string
                description: |-
                  The cloud provider on which your TiDB cluster is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud Platform cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              region:
                type: string
                description: Region of the cluster.
                example: us-west-2
              create_timestamp:
                type: string
                description: The creation time of the cluster in Unix timestamp seconds
                  (epoch time).
                format: timestamp
                example: "1656991448"
              config:
                type: object
                properties:
                  port:
                    maximum: 65535
                    minimum: 1024
                    type: integer
                    description: The TiDB port for connection. The port must be in
                      the range of 1024-65535 except 10080.
                    format: int32
                    example: 4000
                    default: 4000
                  components:
                    required:
                    - tidb
                    - tikv
                    type: object
                    properties:
                      tidb:
                        required:
                        - node_quantity
                        - node_size
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                              **Limitations**:
                              - You cannot modify `node_size` for TiDB of an existing cluster.
                            example: 8C16G
                          node_quantity:
                            type: integer
                            description: |
                              The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                            format: int32
                            example: 2
                        description: The TiDB component of the cluster.
                      tikv:
                        required:
                        - node_quantity
                        - node_size
                        - storage_size_gib
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                              **Limitations**:
                              - You cannot modify `node_size` for TiKV of an existing cluster.
                            example: 8C64G
                          storage_size_gib:
                            type: integer
                            description: The storage size of a node in the cluster.
                              You can get the minimum and maximum of storage size
                              from the response of [List the cloud providers, regions
                              and available specifications](#tag/Cluster/operation/ListProviderRegions).
                            format: int32
                            example: 1024
                          node_quantity:
                            type: integer
                            description: |-
                              The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Limitations**:
                              - You cannot decrease node quantity for TiKV.
                              - The `node_quantity` of TiKV must be a multiple of 3.
                            format: int32
                            example: 3
                        description: The TiKV component of the cluster.
                      tiflash:
                        required:
                        - node_quantity
                        - node_size
                        - storage_size_gib
                        type: object
                        properties:
                          node_size:
                            type: string
                            description: |-
                              The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Additional combination rules**:
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                              - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                              **Limitations**:
                              - You cannot modify `node_size` for TiFlash of an existing cluster.
                            example: 8C64G
                          storage_size_gib:
                            type: integer
                            description: |
                              The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                            format: int32
                            example: 1024
                          node_quantity:
                            type: integer
                            description: |
                              The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                              **Limitations**:
                              - You cannot decrease node quantity for TiFlash.
                            format: int32
                            example: 1
                        description: The TiFlash component of the cluster.
                    description: The components of the cluster.
                    example:
                      tidb:
                        node_size: 8C16G
                        node_quantity: 2
                      tikv:
                        node_size: 8C64G
                        storage_size_gib: 1024
                        node_quantity: 3
                description: The configuration of the cluster.
                example:
                  port: 4000
                  components:
                    tidb:
                      node_size: 8C16G
                      node_quantity: 2
                    tikv:
                      node_size: 8C64G
                      storage_size_gib: 1024
                      node_quantity: 3
              status:
                title: ClusterItemStatus
                type: object
                properties:
                  tidb_version:
                    type: string
                    description: TiDB version.
                    example: v6.1.0
                  cluster_status:
                    type: string
                    description: Status of the cluster.
                    format: enum
                    example: AVAILABLE
                    enum:
                    - AVAILABLE
                    - CREATING
                    - MODIFYING
                    - PAUSED
                    - RESUMING
                    - UNAVAILABLE
                    - IMPORTING
                  node_map:
                    required:
                    - tidb
                    - tikv
                    type: object
                    properties:
                      tidb:
                        type: array
                        description: TiDB node map.
                        example:
                        - node_name: tidb-0
                          availability_zone: us-west-2a
                          node_size: 8C16G
                          vcpu_num: 8
                          ram_bytes: "17179869184"
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tidb-1
                          availability_zone: us-west-2b
                          node_size: 8C16G
                          vcpu_num: 8
                          ram_bytes: "17179869184"
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tidb-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiDB component in the cluster.
                              example: 8C16G
                            vcpu_num:
                              type: integer
                              description: The total vCPUs of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                is always 0.
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: The RAM size of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                is always 0.
                              format: int64
                              example: "17179869184"
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                      tikv:
                        type: array
                        description: TiKV node map.
                        example:
                        - node_name: tikv-0
                          availability_zone: us-west-2a
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tikv-1
                          availability_zone: us-west-2b
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tikv-2
                          availability_zone: us-west-2c
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tikv-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiKV component in the cluster.
                              example: 8C64G
                            vcpu_num:
                              type: integer
                              description: The total vCPUs of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                is always 0.
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: The RAM size of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                is always 0.
                              format: int64
                              example: "68719476736"
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                              format: int32
                              example: 1024
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                      tiflash:
                        type: array
                        description: TiFlash node map.
                        example:
                        - node_name: tiflash-0
                          availability_zone: us-west-2a
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        - node_name: tiflash-1
                          availability_zone: us-west-2b
                          node_size: 8C64G
                          vcpu_num: 8
                          ram_bytes: "68719476736"
                          storage_size_gib: 1024
                          status: NODE_STATUS_AVAILABLE
                        items:
                          type: object
                          properties:
                            node_name:
                              type: string
                              description: The name of a node in the cluster.
                              example: tiflash-0
                            availability_zone:
                              type: string
                              description: The availability zone of a node in the
                                cluster.
                              example: us-west-2a
                            node_size:
                              type: string
                              description: The size of the TiFlash component in the
                                cluster.
                              example: 8C64G
                            vcpu_num:
                              type: integer
                              description: The total vCPUs of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `vcpu_num`
                                is always 0.
                              format: int32
                              example: 8
                            ram_bytes:
                              type: string
                              description: The RAM size of a node in the cluster.
                                If the `cluster_type` is `"DEVELOPER"`, `ram_bytes`
                                is always 0.
                              format: int64
                              example: "68719476736"
                            storage_size_gib:
                              type: integer
                              description: The storage size of a node in the cluster.
                              format: int32
                              example: 1024
                            status:
                              type: string
                              description: The status of a node in the cluster.
                              example: NODE_STATUS_AVAILABLE
                              enum:
                              - NODE_STATUS_AVAILABLE
                              - NODE_STATUS_UNAVAILABLE
                              - NODE_STATUS_CREATING
                              - NODE_STATUS_DELETING
                    description: Node map. The `node_map` is returned only when the
                      `cluster_status` is `"AVAILABLE"` or `"MODIFYING"`.
                  connection_strings:
                    type: object
                    properties:
                      default_user:
                        type: string
                        description: The default TiDB user for connection.
                        example: root
                      standard:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The host of standard connection.
                            example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                          port:
                            maximum: 65535
                            minimum: 1024
                            type: integer
                            description: |-
                              The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                              **Limitations**:
                              - For a Developer Tier cluster, only port `4000` is available.
                            format: int32
                            example: 4000
                            default: 4000
                        description: |-
                          Standard connection string.

                          You must configure the [IP Access List](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection) for the cluster you created on [TiDB Cloud console](https://tidbcloud.com/) before connecting to this connection string.
                      vpc_peering:
                        type: object
                        properties:
                          host:
                            type: string
                            description: The host of VPC peering connection.
                            example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
                          port:
                            maximum: 65535
                            minimum: 1024
                            type: integer
                            description: |-
                              The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

                              **Limitations**:
                              - For a Developer Tier cluster, only port `4000` is available.
                            format: int32
                            example: 4000
                            default: 4000
                        description: |-
                          [VPC peering](https://docs.pingcap.com/tidbcloud/tidb-cloud-glossary#vpc-peering) connection string.

                          You must [Set up VPC peering connections](https://docs.pingcap.com/tidbcloud/set-up-vpc-peering-connections) for the project before connecting to this private connection string.
                    description: Connection strings.
                description: The status of the cluster.
            description: ClusterItem is the information of cluster.
        total:
          type: integer
          description: The total number of clusters in the project.
          format: int64
          example: 1
      description: GetClustersOfProjectResp is the response for getting clusters of
        project.
    openapiListProjectItem:
      title: ListProjectItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the project.
          format: uint64
          example: "1"
        org_id:
          type: string
          description: The ID of the TiDB Cloud organization to which the project
            belongs.
          format: uint64
          example: "1"
        name:
          type: string
          description: The name of the project.
          example: default_project
        cluster_count:
          type: integer
          description: The number of TiDB Cloud clusters deployed in the project.
          format: int64
          example: 4
        user_count:
          type: integer
          description: The number of users in the project.
          format: int64
          example: 10
        create_timestamp:
          type: string
          description: The creation time of the cluster in Unix timestamp seconds
            (epoch time).
          format: timestamp
          example: "1656991448"
      description: ListProjectItem is the item of projects.
    openapiListProjectsResp:
      title: GetProjectsResp
      required:
      - items
      - total
      type: object
      properties:
        items:
          type: array
          description: The items of accessible projects.
          items:
            title: ListProjectItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the project.
                format: uint64
                example: "1"
              org_id:
                type: string
                description: The ID of the TiDB Cloud organization to which the project
                  belongs.
                format: uint64
                example: "1"
              name:
                type: string
                description: The name of the project.
                example: default_project
              cluster_count:
                type: integer
                description: The number of TiDB Cloud clusters deployed in the project.
                format: int64
                example: 4
              user_count:
                type: integer
                description: The number of users in the project.
                format: int64
                example: 10
              create_timestamp:
                type: string
                description: The creation time of the cluster in Unix timestamp seconds
                  (epoch time).
                format: timestamp
                example: "1656991448"
            description: ListProjectItem is the item of projects.
        total:
          type: integer
          description: The total number of accessible projects.
          format: int64
          example: 1
      description: GetProjectsResp is the response for getting accessible projects.
    openapiListProviderRegionsItem:
      title: ListProviderRegionsItem
      type: object
      properties:
        cluster_type:
          type: string
          description: |-
            The cluster type.
            - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
            - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster
          format: enum
          example: DEDICATED
          enum:
          - DEDICATED
          - DEVELOPER
        cloud_provider:
          type: string
          description: |-
            The cloud provider on which your TiDB cluster is hosted.
            - `"AWS"`: the Amazon Web Services cloud provider
            - `"GCP"`: the Google Cloud Platform cloud provider
          format: string
          example: AWS
          enum:
          - AWS
          - GCP
        region:
          type: string
          description: |-
            The region in which your TiDB cluster is hosted.

            For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

            For example, `"us-west-2"` refers to Oregon for AWS.
          example: us-west-2
        tidb:
          type: array
          description: The list of TiDB specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiDB component in the cluster.
                example: 8C16G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiDB component
                  in the cluster.
        tikv:
          type: array
          description: The list of TiKV specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiKV component in the cluster.
                example: 8C64G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiKV component
                  in the cluster.
              storage_size_gib_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum storage size for each node of the component
                      in the cluster.
                    format: int32
                  max:
                    type: integer
                    description: The maximum storage size for each node of the component
                      in the cluster.
                    format: int32
                description: The storage size range for each node of the TiKV component
                  in the cluster.
        tiflash:
          type: array
          description: The list of TiFlash specifications in the region.
          items:
            type: object
            properties:
              node_size:
                type: string
                description: The size of the TiFlash component in the cluster.
                example: 8C64G
              node_quantity_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum node quantity of the component in the
                      cluster.
                    format: int32
                  step:
                    type: integer
                    description: The step of node quantity of the component in the
                      cluster.
                    format: int32
                description: The range and step of node quantity of the TiFlash component
                  in the cluster.
              storage_size_gib_range:
                type: object
                properties:
                  min:
                    type: integer
                    description: The minimum storage size for each node of the component
                      in the cluster.
                    format: int32
                  max:
                    type: integer
                    description: The maximum storage size for each node of the component
                      in the cluster.
                    format: int32
                description: The storage size range for each node of the TiFlash component
                  in the cluster.
      description: ListProviderRegionsItem is the item of provider regions.
    openapiListProviderRegionsResp:
      title: GetProviderRegionsResp
      type: object
      properties:
        items:
          type: array
          description: Items of provider regions.
          example:
          - cluster_type: DEDICATED
            cloud_provider: AWS
            region: us-west-2
            tidb:
            - node_size: 8C16G
              node_quantity_range:
                min: 1
                step: 1
            tikv:
            - node_size: 8C64G
              node_quantity_range:
                min: 3
                step: 3
              storage_size_gib_range:
                min: 500
                max: 4096
            tiflash:
            - node_size: 8C64G
              node_quantity_range:
                min: 0
                step: 1
              storage_size_gib_range:
                min: 500
                max: 2048
          - cluster_type: DEVELOPER
            cloud_provider: AWS
            region: us-west-2
            tidb:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
            tikv:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
              storage_size_gib_range:
                min: 1
                max: 1
            tiflash:
            - node_size: Shared0
              node_quantity_range:
                min: 1
                step: 1
              storage_size_gib_range:
                min: 1
                max: 1
          items:
            title: ListProviderRegionsItem
            type: object
            properties:
              cluster_type:
                type: string
                description: |-
                  The cluster type.
                  - `"DEVELOPER"`: a [Developer Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#developer-tier) cluster
                  - `"DEDICATED"`: a [Dedicated Tier](https://docs.pingcap.com/tidbcloud/select-cluster-tier#dedicated-tier) cluster
                format: enum
                example: DEDICATED
                enum:
                - DEDICATED
                - DEVELOPER
              cloud_provider:
                type: string
                description: |-
                  The cloud provider on which your TiDB cluster is hosted.
                  - `"AWS"`: the Amazon Web Services cloud provider
                  - `"GCP"`: the Google Cloud Platform cloud provider
                format: string
                example: AWS
                enum:
                - AWS
                - GCP
              region:
                type: string
                description: |-
                  The region in which your TiDB cluster is hosted.

                  For the detailed information on each region, refer to the documentation of the corresponding cloud provider ([AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html) | [GCP](https://cloud.google.com/about/locations#americas)).

                  For example, `"us-west-2"` refers to Oregon for AWS.
                example: us-west-2
              tidb:
                type: array
                description: The list of TiDB specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiDB component in the cluster.
                      example: 8C16G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiDB
                        component in the cluster.
              tikv:
                type: array
                description: The list of TiKV specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiKV component in the cluster.
                      example: 8C64G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiKV
                        component in the cluster.
                    storage_size_gib_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum storage size for each node of the
                            component in the cluster.
                          format: int32
                        max:
                          type: integer
                          description: The maximum storage size for each node of the
                            component in the cluster.
                          format: int32
                      description: The storage size range for each node of the TiKV
                        component in the cluster.
              tiflash:
                type: array
                description: The list of TiFlash specifications in the region.
                items:
                  type: object
                  properties:
                    node_size:
                      type: string
                      description: The size of the TiFlash component in the cluster.
                      example: 8C64G
                    node_quantity_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum node quantity of the component
                            in the cluster.
                          format: int32
                        step:
                          type: integer
                          description: The step of node quantity of the component
                            in the cluster.
                          format: int32
                      description: The range and step of node quantity of the TiFlash
                        component in the cluster.
                    storage_size_gib_range:
                      type: object
                      properties:
                        min:
                          type: integer
                          description: The minimum storage size for each node of the
                            component in the cluster.
                          format: int32
                        max:
                          type: integer
                          description: The maximum storage size for each node of the
                            component in the cluster.
                          format: int32
                      description: The storage size range for each node of the TiFlash
                        component in the cluster.
            description: ListProviderRegionsItem is the item of provider regions.
      description: GetProviderRegionsResp is the response for getting provider regions.
    openapiListRestoreOfProjectResp:
      title: ListRestoreResp
      type: object
      properties:
        items:
          type: array
          description: The items of all restore tasks.
          items:
            title: ListRestoreRespItem
            type: object
            properties:
              id:
                type: string
                description: The ID of the restore task.
                format: uint64
                example: "1"
              create_timestamp:
                type: string
                description: |-
                  The creation time of the backup in UTC.

                  The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
                format: date-time
                example: 2020-01-01T00:00:00Z
              backup_id:
                type: string
                description: The ID of the backup.
                format: uint64
                example: "1"
              cluster_id:
                type: string
                description: The cluster ID of the backup.
                format: uint64
                example: "1"
              status:
                type: string
                description: The status of the restore task.
                example: PENDING
                enum:
                - PENDING
                - RUNNING
                - FAILED
                - SUCCESS
              cluster:
                title: ClusterInfoOfRestore
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    format: uint64
                    example: "1"
                  name:
                    type: string
                    description: The name of the restored cluster. The restored cluster
                      is the new cluster your backup data is restored to.
                    example: cluster-1
                  status:
                    type: string
                    description: The status of the restored cluster. Possible values
                      are `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`, `"PAUSED"`,
                      `"RESUMING"`, `"UNAVAILABLE"`, `"IMPORTING"`, and `"CLEARED"`.
                    example: AVAILABLE
                description: The information of the restored cluster. The restored
                  cluster is the new cluster your backup data is restored to.
              error_message:
                type: string
                description: The error message of restore if failed.
                example: Please contact support.
            description: The items of all restore tasks.
        total:
          type: integer
          description: The total number of restore tasks in the project.
          format: int64
          example: 10
      description: This response for list restore.
    openapiListRestoreRespItem:
      title: ListRestoreRespItem
      type: object
      properties:
        id:
          type: string
          description: The ID of the restore task.
          format: uint64
          example: "1"
        create_timestamp:
          type: string
          description: |-
            The creation time of the backup in UTC.

            The time format follows the [ISO8601](http://en.wikipedia.org/wiki/ISO_8601) standard, which is `YYYY-MM-DD` (year-month-day) + T +`HH:MM:SS` (hour-minutes-seconds) + Z. For example, `2020-01-01T00:00:00Z`.
          format: date-time
          example: 2020-01-01T00:00:00Z
        backup_id:
          type: string
          description: The ID of the backup.
          format: uint64
          example: "1"
        cluster_id:
          type: string
          description: The cluster ID of the backup.
          format: uint64
          example: "1"
        status:
          type: string
          description: The status of the restore task.
          example: PENDING
          enum:
          - PENDING
          - RUNNING
          - FAILED
          - SUCCESS
        cluster:
          title: ClusterInfoOfRestore
          type: object
          properties:
            id:
              type: string
              description: The ID of the restored cluster. The restored cluster is
                the new cluster your backup data is restored to.
              format: uint64
              example: "1"
            name:
              type: string
              description: The name of the restored cluster. The restored cluster
                is the new cluster your backup data is restored to.
              example: cluster-1
            status:
              type: string
              description: The status of the restored cluster. Possible values are
                `"AVAILABLE"`, `"CREATING"`, `"MODIFYING"`, `"PAUSED"`, `"RESUMING"`,
                `"UNAVAILABLE"`, `"IMPORTING"`, and `"CLEARED"`.
              example: AVAILABLE
          description: The information of the restored cluster. The restored cluster
            is the new cluster your backup data is restored to.
        error_message:
          type: string
          description: The error message of restore if failed.
          example: Please contact support.
      description: The items of all restore tasks.
    openapiListRestoreRespItemStatusEnum:
      type: string
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCESS
    openapiNodeQuantityRange:
      type: object
      properties:
        min:
          type: integer
          description: The minimum node quantity of the component in the cluster.
          format: int32
        step:
          type: integer
          description: The step of node quantity of the component in the cluster.
          format: int32
    openapiNodeStatus:
      type: string
      enum:
      - NODE_STATUS_AVAILABLE
      - NODE_STATUS_UNAVAILABLE
      - NODE_STATUS_CREATING
      - NODE_STATUS_DELETING
    openapiNodeStorageSizeRange:
      type: object
      properties:
        min:
          type: integer
          description: The minimum storage size for each node of the component in
            the cluster.
          format: int32
        max:
          type: integer
          description: The maximum storage size for each node of the component in
            the cluster.
          format: int32
    openapiStandardConnection:
      type: object
      properties:
        host:
          type: string
          description: The host of standard connection.
          example: tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a Developer Tier cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
    openapiTiDBComponent:
      required:
      - node_quantity
      - node_size
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiDB component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

            **Limitations**:
            - You cannot modify `node_size` for TiDB of an existing cluster.
          example: 8C16G
        node_quantity:
          type: integer
          description: |
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 2
    openapiTiDBNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tidb-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiDB component in the cluster.
          example: 8C16G
        vcpu_num:
          type: integer
          description: The total vCPUs of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `vcpu_num` is always 0.
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: The RAM size of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `ram_bytes` is always 0.
          format: int64
          example: "17179869184"
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiDBProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiDB component in the cluster.
          example: 8C16G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiDB component in
            the cluster.
    openapiTiFlashComponent:
      required:
      - node_quantity
      - node_size
      - storage_size_gib
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

            **Limitations**:
            - You cannot modify `node_size` for TiFlash of an existing cluster.
          example: 8C64G
        storage_size_gib:
          type: integer
          description: |
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: |
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease node quantity for TiFlash.
          format: int32
          example: 1
    openapiTiFlashNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tiflash-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiFlash component in the cluster.
          example: 8C64G
        vcpu_num:
          type: integer
          description: The total vCPUs of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `vcpu_num` is always 0.
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: The RAM size of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `ram_bytes` is always 0.
          format: int64
          example: "68719476736"
        storage_size_gib:
          type: integer
          description: The storage size of a node in the cluster.
          format: int32
          example: 1024
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiFlashProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiFlash component in the cluster.
          example: 8C64G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiFlash component
            in the cluster.
        storage_size_gib_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum storage size for each node of the component
                in the cluster.
              format: int32
            max:
              type: integer
              description: The maximum storage size for each node of the component
                in the cluster.
              format: int32
          description: The storage size range for each node of the TiFlash component
            in the cluster.
    openapiTiKVComponent:
      required:
      - node_quantity
      - node_size
      - storage_size_gib
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiKV component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

            **Limitations**:
            - You cannot modify `node_size` for TiKV of an existing cluster.
          example: 8C64G
        storage_size_gib:
          type: integer
          description: The storage size of a node in the cluster. You can get the
            minimum and maximum of storage size from the response of [List the cloud
            providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: |-
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease node quantity for TiKV.
            - The `node_quantity` of TiKV must be a multiple of 3.
          format: int32
          example: 3
    openapiTiKVNodeMap:
      type: object
      properties:
        node_name:
          type: string
          description: The name of a node in the cluster.
          example: tikv-0
        availability_zone:
          type: string
          description: The availability zone of a node in the cluster.
          example: us-west-2a
        node_size:
          type: string
          description: The size of the TiKV component in the cluster.
          example: 8C64G
        vcpu_num:
          type: integer
          description: The total vCPUs of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `vcpu_num` is always 0.
          format: int32
          example: 8
        ram_bytes:
          type: string
          description: The RAM size of a node in the cluster. If the `cluster_type`
            is `"DEVELOPER"`, `ram_bytes` is always 0.
          format: int64
          example: "68719476736"
        storage_size_gib:
          type: integer
          description: The storage size of a node in the cluster.
          format: int32
          example: 1024
        status:
          type: string
          description: The status of a node in the cluster.
          example: NODE_STATUS_AVAILABLE
          enum:
          - NODE_STATUS_AVAILABLE
          - NODE_STATUS_UNAVAILABLE
          - NODE_STATUS_CREATING
          - NODE_STATUS_DELETING
    openapiTiKVProfile:
      type: object
      properties:
        node_size:
          type: string
          description: The size of the TiKV component in the cluster.
          example: 8C64G
        node_quantity_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum node quantity of the component in the cluster.
              format: int32
            step:
              type: integer
              description: The step of node quantity of the component in the cluster.
              format: int32
          description: The range and step of node quantity of the TiKV component in
            the cluster.
        storage_size_gib_range:
          type: object
          properties:
            min:
              type: integer
              description: The minimum storage size for each node of the component
                in the cluster.
              format: int32
            max:
              type: integer
              description: The maximum storage size for each node of the component
                in the cluster.
              format: int32
          description: The storage size range for each node of the TiKV component
            in the cluster.
    openapiUpdateClusterComponents:
      type: object
      properties:
        tidb:
          required:
          - node_quantity
          type: object
          properties:
            node_quantity:
              type: integer
              description: The number of nodes in the cluster. You can get the minimum
                and step of a node quantity from the response of [List the cloud providers,
                regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
              format: int32
              example: 3
          description: The TiDB component of the cluster.
        tikv:
          type: object
          properties:
            storage_size_gib:
              type: integer
              description: |-
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease storage size for TiKV.
                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: |-
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease node quantity for TiKV.
                - The `node_quantity` of TiKV must be a multiple of 3.
              format: int32
              example: 6
          description: The TiKV component of the cluster.
        tiflash:
          type: object
          properties:
            node_size:
              type: string
              description: |-
                The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Additional combination rules**:
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                **Limitations**:
                - You cannot modify `node_size` for TiFlash of an existing cluster.
              example: 8C64G
            storage_size_gib:
              type: integer
              description: |-
                The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease storage size for TiFlash.
                - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
              format: int32
              example: 1024
            node_quantity:
              type: integer
              description: |-
                The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                **Limitations**:
                - You cannot decrease node quantity for TiFlash.
              format: int32
              example: 2
          description: |-
            The TiFlash component of the cluster.

            If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
    openapiUpdateClusterConfig:
      title: UpdateClusterComponents
      type: object
      properties:
        components:
          type: object
          properties:
            tidb:
              required:
              - node_quantity
              type: object
              properties:
                node_quantity:
                  type: integer
                  description: The number of nodes in the cluster. You can get the
                    minimum and step of a node quantity from the response of [List
                    the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
                  format: int32
                  example: 3
              description: The TiDB component of the cluster.
            tikv:
              type: object
              properties:
                storage_size_gib:
                  type: integer
                  description: |-
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease storage size for TiKV.
                    - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiKV.
                    - The `node_quantity` of TiKV must be a multiple of 3.
                  format: int32
                  example: 6
              description: The TiKV component of the cluster.
            tiflash:
              type: object
              properties:
                node_size:
                  type: string
                  description: |-
                    The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Additional combination rules**:
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
                    - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

                    **Limitations**:
                    - You cannot modify `node_size` for TiFlash of an existing cluster.
                  example: 8C64G
                storage_size_gib:
                  type: integer
                  description: |-
                    The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease storage size for TiFlash.
                    - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
                  format: int32
                  example: 1024
                node_quantity:
                  type: integer
                  description: |-
                    The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

                    **Limitations**:
                    - You cannot decrease node quantity for TiFlash.
                  format: int32
                  example: 2
              description: |-
                The TiFlash component of the cluster.

                If you want to add TiFlash nodes to a cluster that does not have one before (increase the node_quantity of `"TIFLASH"` from 0), you must specify the `node_size`, `storage_size_gib` and `node_quantity` of TiFlash nodes.
          description: The components of the cluster.
        paused:
          type: boolean
          description: |-
            Flag that indicates whether the cluster is paused. `true` means to pause the cluster, and `false` means to resume the cluster. For more details, refer to [Pause or Resume a TiDB Cluster](https://docs.pingcap.com/tidbcloud/pause-or-resume-tidb-cluster).

            **Limitations:**
             - The cluster can be paused only when the `cluster_status` is `"AVAILABLE"`.
            - The cluster can be resumed only when the `cluster_status` is `"PAUSED"`.
      description: UpdateClusterComponents is the request for updating cluster components.
    openapiUpdateTiDBComponent:
      required:
      - node_quantity
      type: object
      properties:
        node_quantity:
          type: integer
          description: The number of nodes in the cluster. You can get the minimum
            and step of a node quantity from the response of [List the cloud providers,
            regions and available specifications](#tag/Cluster/operation/ListProviderRegions).
          format: int32
          example: 3
    openapiUpdateTiFlashComponent:
      type: object
      properties:
        node_size:
          type: string
          description: |-
            The size of the TiFlash component in the cluster. You can get the available node size of each region from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Additional combination rules**:
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
            - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.

            **Limitations**:
            - You cannot modify `node_size` for TiFlash of an existing cluster.
          example: 8C64G
        storage_size_gib:
          type: integer
          description: |-
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease storage size for TiFlash.
            - If your TiDB cluster is hosted by AWS, after changing the storage size of TiFlash, you must wait at least six hours before you can change it again.
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: |-
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease node quantity for TiFlash.
          format: int32
          example: 2
    openapiUpdateTiKVComponent:
      type: object
      properties:
        storage_size_gib:
          type: integer
          description: |-
            The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease storage size for TiKV.
            - If your TiDB cluster is hosted by AWS, after changing the storage size of TiKV, you must wait at least six hours before you can change it again.
          format: int32
          example: 1024
        node_quantity:
          type: integer
          description: |-
            The number of nodes in the cluster. You can get the minimum and step of a node quantity from the response of [List the cloud providers, regions and available specifications](#tag/Cluster/operation/ListProviderRegions).

            **Limitations**:
            - You cannot decrease node quantity for TiKV.
            - The `node_quantity` of TiKV must be a multiple of 3.
          format: int32
          example: 6
    openapiVPCPeeringConnection:
      type: object
      properties:
        host:
          type: string
          description: The host of VPC peering connection.
          example: private-tidb.f69f3808.acea1f2a.us-east-1.shared.aws.tidbcloud.com
        port:
          maximum: 65535
          minimum: 1024
          type: integer
          description: |-
            The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.

            **Limitations**:
            - For a Developer Tier cluster, only port `4000` is available.
          format: int32
          example: 4000
          default: 4000
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
x-tagGroups:
- name: Endpoints
  tags:
  - Project
  - Cluster
  - Backup
  - Restore
